
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 3.10.0
 * Query Engine version: 73e60b76d394f8d37d8ebd1f8918c79029f0db86
 */
Prisma.prismaVersion = {
  client: "3.10.0",
  engine: "73e60b76d394f8d37d8ebd1f8918c79029f0db86"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = 'DbNull'
Prisma.JsonNull = 'JsonNull'
Prisma.AnyNull = 'AnyNull'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.AccidentScalarFieldEnum = makeEnum({
  Ref: 'Ref',
  CodeFiliale: 'CodeFiliale',
  DateC: 'DateC',
  DateAcc: 'DateAcc',
  HeureAcc: 'HeureAcc',
  NumDosPolice: 'NumDosPolice',
  CondMeteo: 'CondMeteo',
  CondRoute: 'CondRoute',
  Immatriculation: 'Immatriculation',
  Matriculec: 'Matriculec',
  Vitesse: 'Vitesse',
  Assurance: 'Assurance',
  Fautif: 'Fautif',
  ImmatriculationTiers: 'ImmatriculationTiers',
  Conducteur: 'Conducteur',
  VitesseTiers: 'VitesseTiers',
  AssuranceTiers: 'AssuranceTiers',
  DateExpAv: 'DateExpAv',
  DateExpApr: 'DateExpApr',
  AccordRep: 'AccordRep',
  DateRemb: 'DateRemb',
  NumCheque: 'NumCheque',
  Montant: 'Montant',
  MontD_gats: 'MontD_gats',
  DateFin: 'DateFin',
  HeureFin: 'HeureFin',
  AccordPC: 'AccordPC',
  AccordBS: 'AccordBS',
  Lieu: 'Lieu',
  Descriptions: 'Descriptions',
  Degats: 'Degats',
  NomExpert: 'NomExpert',
  ExpertiseOui: 'ExpertiseOui',
  ExpertiseNon: 'ExpertiseNon',
  RP: 'RP',
  NonFautif: 'NonFautif',
  TypeAccident: 'TypeAccident',
  Commentaires: 'Commentaires',
  Mission: 'Mission',
  DateEnvoiFacture: 'DateEnvoiFacture',
  DateMC: 'DateMC',
  HeureMC: 'HeureMC'
});

exports.Prisma.AffectationClientScalarFieldEnum = makeEnum({
  CodeLieu: 'CodeLieu',
  Affectation: 'Affectation'
});

exports.Prisma.AffectationTypeScalarFieldEnum = makeEnum({
  Code: 'Code',
  TypeAffectation: 'TypeAffectation'
});

exports.Prisma.AlerteScalarFieldEnum = makeEnum({
  CodeAlert: 'CodeAlert',
  DesigAlerte: 'DesigAlerte',
  CodeTyVeh: 'CodeTyVeh',
  RefArtic: 'RefArtic',
  Index_Prev: 'Index_Prev',
  Echeance: 'Echeance',
  index_message: 'index_message',
  echeance_message: 'echeance_message',
  Etat: 'Etat',
  Acceuil: 'Acceuil',
  Client: 'Client',
  Barre: 'Barre'
});

exports.Prisma.AlerteRemorqueScalarFieldEnum = makeEnum({
  CodeAlert: 'CodeAlert',
  DesigAlerte: 'DesigAlerte',
  CodeTypeRemorque: 'CodeTypeRemorque',
  RefArtic: 'RefArtic',
  Index_Prev: 'Index_Prev',
  Echeance: 'Echeance',
  index_message: 'index_message',
  echeance_message: 'echeance_message',
  Etat: 'Etat',
  Acceuil: 'Acceuil',
  Client: 'Client'
});

exports.Prisma.ArticleScalarFieldEnum = makeEnum({
  RefArtic: 'RefArtic',
  DesignationArt: 'DesignationArt',
  CodeCatArt: 'CodeCatArt',
  CodePays: 'CodePays',
  ActifsArt: 'ActifsArt',
  StockMinArt: 'StockMinArt',
  StockInitArt: 'StockInitArt',
  QteEnStock: 'QteEnStock',
  Prix_htArt: 'Prix_htArt',
  TVAArt: 'TVAArt',
  DocumentArt: 'DocumentArt',
  ObservationsArt: 'ObservationsArt',
  Serial: 'Serial',
  PhotoArt: 'PhotoArt',
  PhotoCam: 'PhotoCam',
  CodeOrgane: 'CodeOrgane',
  codeCategRep: 'codeCategRep',
  KilometrageTheori: 'KilometrageTheori',
  StockMaxiArt: 'StockMaxiArt'
});

exports.Prisma.ArticleFournisseurScalarFieldEnum = makeEnum({
  AR_Ref: 'AR_Ref',
  CT_Num: 'CT_Num',
  AF_RefFourniss: 'AF_RefFourniss',
  AF_PrixAch: 'AF_PrixAch',
  AF_Remise: 'AF_Remise',
  IntituleFRS: 'IntituleFRS',
  TVA: 'TVA'
});

exports.Prisma.ArticleTypeVehiculeScalarFieldEnum = makeEnum({
  RefArtic: 'RefArtic',
  CodeTyVeh: 'CodeTyVeh'
});

exports.Prisma.AssuranceScalarFieldEnum = makeEnum({
  CodeAssur: 'CodeAssur',
  D_signationAssur: 'D_signationAssur'
});

exports.Prisma.Assurance_ContratScalarFieldEnum = makeEnum({
  NContrat: 'NContrat',
  Assurance: 'Assurance',
  DateEffetDebut: 'DateEffetDebut',
  DateEffetFin: 'DateEffetFin',
  DateSignature: 'DateSignature',
  R_f_rence: 'R_f_rence',
  Alerte: 'Alerte',
  Montant: 'Montant',
  PersonneMorale: 'PersonneMorale',
  PersonnePhysique: 'PersonnePhysique',
  Glossaire: 'Glossaire',
  Fractionnement: 'Fractionnement',
  Etat: 'Etat',
  Prolongation: 'Prolongation',
  Code: 'Code',
  Filiale: 'Filiale',
  Departement: 'Departement'
});

exports.Prisma.Assurance_OptionScalarFieldEnum = makeEnum({
  NContrat: 'NContrat',
  CodeOption: 'CodeOption',
  CodeAssurance: 'CodeAssurance',
  DesignOption: 'DesignOption',
  DesignAssurance: 'DesignAssurance'
});

exports.Prisma.Assurance_VehiculeScalarFieldEnum = makeEnum({
  Vehicule: 'Vehicule',
  NContrat: 'NContrat',
  Assurance: 'Assurance',
  MontantD_tail: 'MontantD_tail',
  DateD: 'DateD'
});

exports.Prisma.CategorieArticleScalarFieldEnum = makeEnum({
  CodeCatArt: 'CodeCatArt',
  DesignCatArt: 'DesignCatArt'
});

exports.Prisma.CategorieReparationScalarFieldEnum = makeEnum({
  codeCategRep: 'codeCategRep',
  DesigCategRep: 'DesigCategRep'
});

exports.Prisma.CategoriesPermisScalarFieldEnum = makeEnum({
  CodeCategorie: 'CodeCategorie',
  DesignationC: 'DesignationC'
});

exports.Prisma.CbSysLibreScalarFieldEnum = makeEnum({
  CB_File: 'CB_File',
  CB_Name: 'CB_Name',
  CB_Pos: 'CB_Pos',
  CB_Type: 'CB_Type',
  CB_Len: 'CB_Len',
  CB_Flag: 'CB_Flag',
  CB_Formule: 'CB_Formule',
  CB_Creator: 'CB_Creator'
});

exports.Prisma.ChauffeurScalarFieldEnum = makeEnum({
  MatriculeC: 'MatriculeC',
  PrenomC: 'PrenomC',
  NomC: 'NomC',
  DateEmbaucheC: 'DateEmbaucheC',
  NCinC: 'NCinC',
  DateNaissanceC: 'DateNaissanceC',
  TelephC: 'TelephC',
  PortableC: 'PortableC',
  EmailC: 'EmailC',
  AdresseC: 'AdresseC',
  VilleC: 'VilleC',
  CpC: 'CpC',
  NiveauC: 'NiveauC',
  ObsevationsC: 'ObsevationsC',
  EtatC: 'EtatC',
  Photo: 'Photo',
  Permis: 'Permis',
  PhotoCam: 'PhotoCam',
  Commercial: 'Commercial',
  DateDelivrance: 'DateDelivrance',
  Abreviation: 'Abreviation',
  ARChauff: 'ARChauff',
  CodeClient: 'CodeClient',
  GSang: 'GSang'
});

exports.Prisma.Chauffeur_CategPermisScalarFieldEnum = makeEnum({
  MatriculeC: 'MatriculeC',
  CodeCategorie: 'CodeCategorie',
  DateP: 'DateP'
});

exports.Prisma.Chauffeur_LieuScalarFieldEnum = makeEnum({
  CodeLieu: 'CodeLieu',
  MatriculeC: 'MatriculeC',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Code: 'Code'
});

exports.Prisma.ClientScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  IntituleClient: 'IntituleClient',
  ActiviteCl: 'ActiviteCl',
  AdresseCl: 'AdresseCl',
  VilleCl: 'VilleCl',
  CpCl: 'CpCl',
  RegionCl: 'RegionCl',
  CodePays: 'CodePays',
  TelephCl: 'TelephCl',
  Portable: 'Portable',
  EmailCl: 'EmailCl',
  SiteCl: 'SiteCl',
  Observations: 'Observations',
  RefDep: 'RefDep',
  EtatCli: 'EtatCli',
  Type: 'Type',
  MatriculeFiscale: 'MatriculeFiscale',
  Principal: 'Principal',
  CodeCatCompta: 'CodeCatCompta',
  InfoLibre1: 'InfoLibre1',
  InfoLibre2: 'InfoLibre2',
  InfoLibre3: 'InfoLibre3',
  InfoLibre4: 'InfoLibre4',
  InfoLibre5: 'InfoLibre5',
  InfoLibre6: 'InfoLibre6',
  InfoLibre7: 'InfoLibre7',
  InfoLibre8: 'InfoLibre8',
  InfoLibre9: 'InfoLibre9',
  InfoLibre10: 'InfoLibre10',
  AR_Intitule: 'AR_Intitule',
  AR_Description: 'AR_Description',
  AR_Region: 'AR_Region',
  AR_Code: 'AR_Code',
  TypeParametre: 'TypeParametre',
  Formule: 'Formule',
  Produit: 'Produit'
});

exports.Prisma.ConvoyeurScalarFieldEnum = makeEnum({
  MatriculeC: 'MatriculeC',
  PrenomC: 'PrenomC',
  NomC: 'NomC',
  DateEmbaucheC: 'DateEmbaucheC',
  NCinC: 'NCinC',
  DateNaissanceC: 'DateNaissanceC',
  TelephC: 'TelephC',
  PortableC: 'PortableC',
  EmailC: 'EmailC',
  AdresseC: 'AdresseC',
  VilleC: 'VilleC',
  CpC: 'CpC',
  NiveauC: 'NiveauC',
  ObsevationsC: 'ObsevationsC',
  EtatC: 'EtatC',
  Photo: 'Photo',
  Permis: 'Permis',
  PhotoCam: 'PhotoCam',
  Commercial: 'Commercial'
});

exports.Prisma.Convoyeur_CategPermisScalarFieldEnum = makeEnum({
  MatriculeC: 'MatriculeC',
  CodeCategorie: 'CodeCategorie',
  DateP: 'DateP'
});

exports.Prisma.CoutMainOeuvreScalarFieldEnum = makeEnum({
  CodeCoutMainOeuvre: 'CodeCoutMainOeuvre',
  DateCout: 'DateCout',
  CoutMainOeuvre: 'CoutMainOeuvre'
});

exports.Prisma.CoutMissionScalarFieldEnum = makeEnum({
  CodeCout: 'CodeCout',
  identifiant: 'identifiant',
  prix: 'prix',
  codeMission: 'codeMission'
});

exports.Prisma.CoutOperationScalarFieldEnum = makeEnum({
  CodeMission: 'CodeMission',
  CodeContrat: 'CodeContrat',
  CodeCharge: 'CodeCharge',
  Montant: 'Montant'
});

exports.Prisma.CRegionScalarFieldEnum = makeEnum({
  CodeReg: 'CodeReg',
  Designation: 'Designation'
});

exports.Prisma.CVillesScalarFieldEnum = makeEnum({
  CodeVille: 'CodeVille',
  Desig_Ville: 'Desig_Ville',
  CodeReg: 'CodeReg'
});

exports.Prisma.DepotScalarFieldEnum = makeEnum({
  RefDep: 'RefDep',
  IntituleDep: 'IntituleDep',
  AdresseDep: 'AdresseDep',
  CpDep: 'CpDep',
  VilleDep: 'VilleDep',
  RegionDep: 'RegionDep',
  ResponsableDep: 'ResponsableDep',
  TeleDep: 'TeleDep',
  EmailDep: 'EmailDep'
});

exports.Prisma.DepotRemplissageGasoilScalarFieldEnum = makeEnum({
  CodeDepot: 'CodeDepot',
  DesignDepot: 'DesignDepot'
});

exports.Prisma.Depots_ClientsScalarFieldEnum = makeEnum({
  RefDep: 'RefDep',
  CodeCl: 'CodeCl'
});

exports.Prisma.DetailRemplacementScalarFieldEnum = makeEnum({
  Num: 'Num',
  Code: 'Code',
  RefArtic: 'RefArtic',
  CodeCl: 'CodeCl',
  CodeFilial: 'CodeFilial',
  Prix: 'Prix',
  Qte: 'Qte'
});

exports.Prisma.DIDemandeInterventionScalarFieldEnum = makeEnum({
  Code: 'Code',
  DIStatut: 'DIStatut',
  DemandeDe: 'DemandeDe',
  DateDI: 'DateDI',
  HeureDI: 'HeureDI',
  DemandePar: 'DemandePar',
  DIMode: 'DIMode',
  DIPriorite: 'DIPriorite',
  DelaiPublic: 'DelaiPublic',
  CodeVehRem: 'CodeVehRem',
  VehRem: 'VehRem',
  DernierIndex: 'DernierIndex',
  NouvIndex: 'NouvIndex',
  OrganeDI: 'OrganeDI',
  DISource: 'DISource',
  DescriptionMotif: 'DescriptionMotif',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Filiale: 'Filiale',
  Utilisateur: 'Utilisateur'
});

exports.Prisma.DIModeScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.DIPrioriteScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.DirectionScalarFieldEnum = makeEnum({
  CodeDirec: 'CodeDirec',
  designationDirec: 'designationDirec',
  codeGouv: 'codeGouv'
});

exports.Prisma.DISourceScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.DIStatutScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.E_ChauffContraintFormationScalarFieldEnum = makeEnum({
  MatriculeC: 'MatriculeC',
  Code: 'Code',
  Designation: 'Designation',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Alerte: 'Alerte',
  Type: 'Type',
  Etat: 'Etat',
  cbmarq: 'cbmarq'
});

exports.Prisma.E_ClientContrainteFormationScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  Code: 'Code',
  Designation: 'Designation',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Alerte: 'Alerte',
  Type: 'Type',
  TypeFiche: 'TypeFiche'
});

exports.Prisma.E_ContrainteFormationScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation',
  Type: 'Type',
  TypeFiche: 'TypeFiche',
  Etat: 'Etat',
  Fractionnement: 'Fractionnement'
});

exports.Prisma.E_ConvContrainteFormationScalarFieldEnum = makeEnum({
  MatriculeC: 'MatriculeC',
  Code: 'Code',
  Designation: 'Designation',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Alerte: 'Alerte',
  Type: 'Type',
  Etat: 'Etat',
  cbmarq: 'cbmarq'
});

exports.Prisma.E_MecanicienContraintFormationScalarFieldEnum = makeEnum({
  MatriculeC: 'MatriculeC',
  Code: 'Code',
  Designation: 'Designation',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Alerte: 'Alerte',
  Type: 'Type',
  Etat: 'Etat',
  cbmarq: 'cbmarq'
});

exports.Prisma.E_RemorqueContrainteFormationScalarFieldEnum = makeEnum({
  MatriculeRem: 'MatriculeRem',
  Code: 'Code',
  Designation: 'Designation',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Alerte: 'Alerte',
  Type: 'Type',
  Etat: 'Etat',
  cbmarq: 'cbmarq'
});

exports.Prisma.E_VehiculeContraintFormationScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  Code: 'Code',
  Designation: 'Designation',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Alerte: 'Alerte',
  Type: 'Type',
  Etat: 'Etat',
  cbmarq: 'cbmarq'
});

exports.Prisma.EmailCCScalarFieldEnum = makeEnum({
  ID: 'ID',
  Email: 'Email'
});

exports.Prisma.EpaisseurPneuScalarFieldEnum = makeEnum({
  RefArtPneu: 'RefArtPneu',
  NSeriePneu: 'NSeriePneu',
  NumOrdre: 'NumOrdre',
  CodeFiliale: 'CodeFiliale',
  EpaissPneu: 'EpaissPneu',
  DatePrelevem: 'DatePrelevem'
});

exports.Prisma.EquivalenceArticleScalarFieldEnum = makeEnum({
  RefArtic: 'RefArtic',
  Art_RefArtic: 'Art_RefArtic'
});

exports.Prisma.ExtincteursScalarFieldEnum = makeEnum({
  NSerieExtinct: 'NSerieExtinct',
  RefExtinct: 'RefExtinct',
  CumuleExtincteur: 'CumuleExtincteur',
  DateMontageEx: 'DateMontageEx',
  DateMorgEx: 'DateMorgEx'
});

exports.Prisma.F_COLLABORATEURScalarFieldEnum = makeEnum({
  CO_No: 'CO_No',
  CO_Nom: 'CO_Nom',
  cbCO_Nom: 'cbCO_Nom',
  CO_Prenom: 'CO_Prenom',
  cbCO_Prenom: 'cbCO_Prenom',
  CO_Fonction: 'CO_Fonction',
  cbCO_Fonction: 'cbCO_Fonction',
  CO_Adresse: 'CO_Adresse',
  CO_Complement: 'CO_Complement',
  CO_CodePostal: 'CO_CodePostal',
  CO_Ville: 'CO_Ville',
  CO_CodeRegion: 'CO_CodeRegion',
  CO_Pays: 'CO_Pays',
  CO_Service: 'CO_Service',
  CO_Vendeur: 'CO_Vendeur',
  CO_Caissier: 'CO_Caissier',
  CO_DateCreation: 'CO_DateCreation',
  CO_Acheteur: 'CO_Acheteur',
  CO_Telephone: 'CO_Telephone',
  CO_Telecopie: 'CO_Telecopie',
  CO_EMail: 'CO_EMail',
  CO_Receptionnaire: 'CO_Receptionnaire',
  PROT_No: 'PROT_No',
  cbPROT_No: 'cbPROT_No',
  CO_TelPortable: 'CO_TelPortable',
  CO_ChargeRecouvr: 'CO_ChargeRecouvr',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag'
});

exports.Prisma.F_COMPTEAScalarFieldEnum = makeEnum({
  N_Analytique: 'N_Analytique',
  CA_Num: 'CA_Num',
  cbCA_Num: 'cbCA_Num',
  CA_Intitule: 'CA_Intitule',
  CA_Type: 'CA_Type',
  CA_Classement: 'CA_Classement',
  cbCA_Classement: 'cbCA_Classement',
  CA_Raccourci: 'CA_Raccourci',
  cbCA_Raccourci: 'cbCA_Raccourci',
  CA_Report: 'CA_Report',
  N_Analyse: 'N_Analyse',
  CA_Saut: 'CA_Saut',
  CA_Sommeil: 'CA_Sommeil',
  CA_DateCreate: 'CA_DateCreate',
  CA_Domaine: 'CA_Domaine',
  CA_Achat: 'CA_Achat',
  CA_Vente: 'CA_Vente',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag',
  Nb_de_ventilations: 'Nb_de_ventilations'
});

exports.Prisma.F_COMPTEGScalarFieldEnum = makeEnum({
  CG_Num: 'CG_Num',
  cbCG_Num: 'cbCG_Num',
  CG_Type: 'CG_Type',
  CG_Intitule: 'CG_Intitule',
  CG_Classement: 'CG_Classement',
  cbCG_Classement: 'cbCG_Classement',
  N_Nature: 'N_Nature',
  CG_Report: 'CG_Report',
  CR_Num: 'CR_Num',
  cbCR_Num: 'cbCR_Num',
  CG_Raccourci: 'CG_Raccourci',
  cbCG_Raccourci: 'cbCG_Raccourci',
  CG_Saut: 'CG_Saut',
  CG_Regroup: 'CG_Regroup',
  CG_Analytique: 'CG_Analytique',
  CG_Echeance: 'CG_Echeance',
  CG_Quantite: 'CG_Quantite',
  CG_Lettrage: 'CG_Lettrage',
  CG_Tiers: 'CG_Tiers',
  CG_DateCreate: 'CG_DateCreate',
  CG_Devise: 'CG_Devise',
  N_Devise: 'N_Devise',
  TA_Code: 'TA_Code',
  cbTA_Code: 'cbTA_Code',
  CG_Sommeil: 'CG_Sommeil',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag',
  Dernire_criture: 'Dernire_criture',
  Nb_critures: 'Nb_critures'
});

exports.Prisma.F_COMPTERScalarFieldEnum = makeEnum({
  CR_Num: 'CR_Num',
  cbCR_Num: 'cbCR_Num',
  CR_Type: 'CR_Type',
  CR_Intitule: 'CR_Intitule',
  CR_Classement: 'CR_Classement',
  cbCR_Classement: 'cbCR_Classement',
  CR_Saut: 'CR_Saut',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag'
});

exports.Prisma.F_DEPOTScalarFieldEnum = makeEnum({
  DE_No: 'DE_No',
  DE_Intitule: 'DE_Intitule',
  cbDE_Intitule: 'cbDE_Intitule',
  DE_Adresse: 'DE_Adresse',
  DE_Complement: 'DE_Complement',
  DE_CodePostal: 'DE_CodePostal',
  DE_Ville: 'DE_Ville',
  DE_Contact: 'DE_Contact',
  DE_Principal: 'DE_Principal',
  DE_CatCompta: 'DE_CatCompta',
  DE_Region: 'DE_Region',
  DE_Pays: 'DE_Pays',
  DE_EMail: 'DE_EMail',
  DE_Code: 'DE_Code',
  cbDE_Code: 'cbDE_Code',
  DE_Telephone: 'DE_Telephone',
  DE_Telecopie: 'DE_Telecopie',
  DE_Replication: 'DE_Replication',
  DP_NoDefaut: 'DP_NoDefaut',
  cbDP_NoDefaut: 'cbDP_NoDefaut',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag'
});

exports.Prisma.F_DEPOTEMPLScalarFieldEnum = makeEnum({
  DE_No: 'DE_No',
  DP_No: 'DP_No',
  DP_Code: 'DP_Code',
  cbDP_Code: 'cbDP_Code',
  DP_Intitule: 'DP_Intitule',
  DP_Zone: 'DP_Zone',
  DP_Type: 'DP_Type',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag'
});

exports.Prisma.F_FAMILLEIMMOScalarFieldEnum = makeEnum({
  FA_CodeFamille: 'FA_CodeFamille',
  cbFA_CodeFamille: 'cbFA_CodeFamille',
  FA_Type: 'FA_Type',
  FA_Intitule: 'FA_Intitule',
  cbFA_Intitule: 'cbFA_Intitule',
  FA_NatBiens: 'FA_NatBiens',
  FA_NatFisc: 'FA_NatFisc',
  FA_AEImmo: 'FA_AEImmo',
  cbFA_AEImmo: 'cbFA_AEImmo',
  FA_Compte01: 'FA_Compte01',
  FA_Compte02: 'FA_Compte02',
  FA_Compte03: 'FA_Compte03',
  FA_Compte04: 'FA_Compte04',
  FA_Compte05: 'FA_Compte05',
  FA_Compte06: 'FA_Compte06',
  FA_Compte07: 'FA_Compte07',
  FA_Compte08: 'FA_Compte08',
  FA_Compte09: 'FA_Compte09',
  FA_Compte10: 'FA_Compte10',
  FA_Compte11: 'FA_Compte11',
  FA_Compte12: 'FA_Compte12',
  FA_Compte13: 'FA_Compte13',
  FA_Compte14: 'FA_Compte14',
  FA_ModeAmort01: 'FA_ModeAmort01',
  FA_ModeAmort02: 'FA_ModeAmort02',
  FA_ModeAmort03: 'FA_ModeAmort03',
  FA_ModeAmort04: 'FA_ModeAmort04',
  FA_ModeAmort05: 'FA_ModeAmort05',
  FA_NbAnnee01: 'FA_NbAnnee01',
  FA_NbAnnee02: 'FA_NbAnnee02',
  FA_NbAnnee03: 'FA_NbAnnee03',
  FA_NbAnnee04: 'FA_NbAnnee04',
  FA_NbAnnee05: 'FA_NbAnnee05',
  FA_NbMois01: 'FA_NbMois01',
  FA_NbMois02: 'FA_NbMois02',
  FA_NbMois03: 'FA_NbMois03',
  FA_NbMois04: 'FA_NbMois04',
  FA_NbMois05: 'FA_NbMois05',
  FA_Depart01: 'FA_Depart01',
  FA_Depart02: 'FA_Depart02',
  FA_Depart03: 'FA_Depart03',
  FA_Depart04: 'FA_Depart04',
  FA_Depart05: 'FA_Depart05',
  FA_Prorata01: 'FA_Prorata01',
  FA_Prorata02: 'FA_Prorata02',
  FA_Prorata03: 'FA_Prorata03',
  FA_Prorata04: 'FA_Prorata04',
  FA_Prorata05: 'FA_Prorata05',
  FA_BaseAmort: 'FA_BaseAmort',
  FA_Plancher: 'FA_Plancher',
  FA_Stat01: 'FA_Stat01',
  FA_Stat02: 'FA_Stat02',
  FA_Stat03: 'FA_Stat03',
  FA_Stat04: 'FA_Stat04',
  FA_Stat05: 'FA_Stat05',
  FA_Stat06: 'FA_Stat06',
  FA_Stat07: 'FA_Stat07',
  FA_Stat08: 'FA_Stat08',
  FA_Stat09: 'FA_Stat09',
  FA_Stat10: 'FA_Stat10',
  N_CategorieTP: 'N_CategorieTP',
  FA_EnumPro: 'FA_EnumPro',
  CA_Num: 'CA_Num',
  cbCA_Num: 'cbCA_Num',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag'
});

exports.Prisma.F_PROTECTIONCPTAScalarFieldEnum = makeEnum({
  PROT_User: 'PROT_User',
  cbCIPROT_User: 'cbCIPROT_User',
  PROT_Pwd: 'PROT_Pwd',
  PROT_Description: 'PROT_Description',
  PROT_Right: 'PROT_Right',
  PROT_No: 'PROT_No',
  PROT_EMail: 'PROT_EMail',
  PROT_UserProfil: 'PROT_UserProfil',
  cbPROT_UserProfil: 'cbPROT_UserProfil',
  PROT_Administrator: 'PROT_Administrator',
  PROT_DatePwd: 'PROT_DatePwd',
  PROT_DateCreate: 'PROT_DateCreate',
  PROT_LastLoginDate: 'PROT_LastLoginDate',
  PROT_LastLoginTime: 'PROT_LastLoginTime',
  PROT_PwdStatus: 'PROT_PwdStatus',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag'
});

exports.Prisma.F_TAXEScalarFieldEnum = makeEnum({
  TA_Intitule: 'TA_Intitule',
  cbTA_Intitule: 'cbTA_Intitule',
  TA_TTaux: 'TA_TTaux',
  TA_Taux: 'TA_Taux',
  TA_Type: 'TA_Type',
  CG_Num: 'CG_Num',
  cbCG_Num: 'cbCG_Num',
  TA_No: 'TA_No',
  TA_Code: 'TA_Code',
  cbTA_Code: 'cbTA_Code',
  TA_NP: 'TA_NP',
  TA_Sens: 'TA_Sens',
  TA_Provenance: 'TA_Provenance',
  TA_Regroup: 'TA_Regroup',
  cbTA_Regroup: 'cbTA_Regroup',
  TA_Assujet: 'TA_Assujet',
  TA_GrilleBase: 'TA_GrilleBase',
  TA_GrilleTaxe: 'TA_GrilleTaxe',
  cbProt: 'cbProt',
  cbMarq: 'cbMarq',
  cbCreateur: 'cbCreateur',
  cbModification: 'cbModification',
  cbReplication: 'cbReplication',
  cbFlag: 'cbFlag'
});

exports.Prisma.FA_ArticleFacturationScalarFieldEnum = makeEnum({
  RefArticle: 'RefArticle',
  DesignArticle: 'DesignArticle',
  CodeF: 'CodeF',
  Etat: 'Etat',
  CodeU: 'CodeU',
  PrixHT: 'PrixHT',
  PrixVente: 'PrixVente',
  Qte: 'Qte',
  Marge: 'Marge',
  AR_Design: 'AR_Design'
});

exports.Prisma.FA_ArticleTaxeScalarFieldEnum = makeEnum({
  RefArticle: 'RefArticle',
  CodeCat: 'CodeCat',
  CodeF: 'CodeF',
  CGNum: 'CGNum',
  CodeS: 'CodeS',
  CodeTaxe1: 'CodeTaxe1',
  TauxTaxe1: 'TauxTaxe1',
  CodeTaxe2: 'CodeTaxe2',
  TauxTaxe2: 'TauxTaxe2',
  CodeTaxe3: 'CodeTaxe3',
  TauxTaxe3: 'TauxTaxe3'
});

exports.Prisma.FA_CatComptaScalarFieldEnum = makeEnum({
  CodeCatCompta: 'CodeCatCompta',
  DesignCatCompta: 'DesignCatCompta'
});

exports.Prisma.FA_ChargeContratScalarFieldEnum = makeEnum({
  CodeContrat: 'CodeContrat',
  CodeCharge: 'CodeCharge',
  Montant: 'Montant'
});

exports.Prisma.FA_CompteGScalarFieldEnum = makeEnum({
  CGNum: 'CGNum',
  IntituleCG: 'IntituleCG',
  AutorisAnalytique: 'AutorisAnalytique'
});

exports.Prisma.FA_EnteteBonCommandeScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  DO_Date: 'DO_Date',
  DO_Heure: 'DO_Heure',
  Client: 'Client',
  DO_Reference: 'DO_Reference',
  Etat: 'Etat',
  Transformer: 'Transformer',
  TransformerSource: 'TransformerSource',
  TransformerDest: 'TransformerDest'
});

exports.Prisma.FA_EnteteBonLivraisonScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  DO_Date: 'DO_Date',
  DO_Heure: 'DO_Heure',
  Client: 'Client',
  DO_Reference: 'DO_Reference',
  Etat: 'Etat',
  Transformer: 'Transformer',
  TransformerSource: 'TransformerSource',
  TransformerDest: 'TransformerDest'
});

exports.Prisma.FA_EnteteDevisScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  DO_Date: 'DO_Date',
  DO_Heure: 'DO_Heure',
  Client: 'Client',
  DO_Reference: 'DO_Reference',
  Etat: 'Etat',
  Transformer: 'Transformer',
  TransformerSource: 'TransformerSource',
  TransformerDest: 'TransformerDest'
});

exports.Prisma.FA_EnteteFactureScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  DO_Date: 'DO_Date',
  DO_Heure: 'DO_Heure',
  Client: 'Client',
  DO_Reference: 'DO_Reference',
  Etat: 'Etat',
  Transformer: 'Transformer',
  TransformerSource: 'TransformerSource',
  TransformerDest: 'TransformerDest',
  TypeFact: 'TypeFact',
  TypeDeBon: 'TypeDeBon'
});

exports.Prisma.FA_FacturationEnergieScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  CodeTypFact: 'CodeTypFact',
  LieuDep: 'LieuDep',
  LieuArriv: 'LieuArriv',
  PrixU: 'PrixU',
  Marq: 'Marq',
  Produit: 'Produit',
  CodeU: 'CodeU'
});

exports.Prisma.FA_FacturationForfaitScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  CodeTypeFact: 'CodeTypeFact',
  PrixU: 'PrixU',
  CbMarq: 'CbMarq',
  CodeArticle: 'CodeArticle',
  CodeU: 'CodeU'
});

exports.Prisma.FA_FacturationLocationScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  CodeTypeFact: 'CodeTypeFact',
  PrixU: 'PrixU',
  CbMarq: 'CbMarq',
  CodeArticle: 'CodeArticle',
  CodeU: 'CodeU'
});

exports.Prisma.FA_FacturationPrixLieuScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  CodeTypFact: 'CodeTypFact',
  LieuDep: 'LieuDep',
  LieuArriv: 'LieuArriv',
  PrixUTone: 'PrixUTone',
  Marq: 'Marq',
  Produit: 'Produit',
  CodeU: 'CodeU'
});

exports.Prisma.FA_FacturationToneKmScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  CodeTypFact: 'CodeTypFact',
  SeuilMinKm: 'SeuilMinKm',
  SeuilMaxKm: 'SeuilMaxKm',
  PrixUTone: 'PrixUTone',
  Marq: 'Marq',
  CodeArticle: 'CodeArticle',
  SupInf: 'SupInf',
  Quantite: 'Quantite',
  Formule: 'Formule',
  Distance: 'Distance',
  Majoration: 'Majoration'
});

exports.Prisma.FA_FacturationTypeScalarFieldEnum = makeEnum({
  Cl_Fact_Type: 'Cl_Fact_Type',
  Cl_fact_Intitule: 'Cl_fact_Intitule',
  Code: 'Code'
});

exports.Prisma.FA_FacturationTypeClScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  CodeTypeFact: 'CodeTypeFact',
  TypeFact: 'TypeFact',
  IntituleTypeFact: 'IntituleTypeFact',
  defaultT: 'defaultT',
  CbType: 'CbType'
});

exports.Prisma.FA_FamilleArticleScalarFieldEnum = makeEnum({
  CodeF: 'CodeF',
  DesignF: 'DesignF'
});

exports.Prisma.FA_FamilleTaxeScalarFieldEnum = makeEnum({
  CodeCat: 'CodeCat',
  CodeF: 'CodeF',
  CGNum: 'CGNum',
  CodeS: 'CodeS',
  CodeTaxe1: 'CodeTaxe1',
  TauxTaxe1: 'TauxTaxe1',
  CodeTaxe2: 'CodeTaxe2',
  TauxTaxe2: 'TauxTaxe2',
  CodeTaxe3: 'CodeTaxe3',
  TauxTaxe3: 'TauxTaxe3'
});

exports.Prisma.FA_FilialeScalarFieldEnum = makeEnum({
  CodeFilial: 'CodeFilial',
  DesignationFilial: 'DesignationFilial'
});

exports.Prisma.FA_FormuleScalarFieldEnum = makeEnum({
  CodeFormule: 'CodeFormule',
  IntituleFormule: 'IntituleFormule',
  TypeFormule: 'TypeFormule',
  OpFormule: 'OpFormule',
  IntituleVar: 'IntituleVar',
  VariableFormule: 'VariableFormule',
  TableVarFormule: 'TableVarFormule',
  Identifiant: 'Identifiant',
  CbMarque: 'CbMarque',
  Formule: 'Formule'
});

exports.Prisma.FA_JournauxScalarFieldEnum = makeEnum({
  CodeJ: 'CodeJ',
  IntituleJ: 'IntituleJ',
  AutorisAnalytiqJ: 'AutorisAnalytiqJ',
  TypeJ: 'TypeJ'
});

exports.Prisma.FA_LieuArriveScalarFieldEnum = makeEnum({
  CodeLieuArrive: 'CodeLieuArrive',
  DesigLieuArrive: 'DesigLieuArrive',
  AR_Design: 'AR_Design',
  CodeRegion: 'CodeRegion',
  abreviation: 'abreviation'
});

exports.Prisma.FA_LieuDepartScalarFieldEnum = makeEnum({
  CodeLieuDepart: 'CodeLieuDepart',
  DesigLieuDepart: 'DesigLieuDepart',
  AR_Design: 'AR_Design',
  CodeRegion: 'CodeRegion',
  Abreviation: 'Abreviation'
});

exports.Prisma.FA_LieuDistanceScalarFieldEnum = makeEnum({
  CodeDistance: 'CodeDistance',
  CodeLieuDepart: 'CodeLieuDepart',
  CodeLieuArrive: 'CodeLieuArrive',
  KmDistance: 'KmDistance'
});

exports.Prisma.FA_LieuDistanceContratScalarFieldEnum = makeEnum({
  CodeContrat: 'CodeContrat',
  CodeLieuDepart: 'CodeLieuDepart',
  CodeLieuArrive: 'CodeLieuArrive',
  KmDistance: 'KmDistance'
});

exports.Prisma.FA_LigneBonCommandeScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  Reference: 'Reference',
  Designation: 'Designation',
  Glossaire: 'Glossaire',
  Quantite: 'Quantite',
  Unite: 'Unite',
  PUHT: 'PUHT',
  Remise: 'Remise',
  MttRemise: 'MttRemise',
  THT: 'THT',
  TVA1: 'TVA1',
  MttTVA1: 'MttTVA1',
  TypeTVA1: 'TypeTVA1',
  TVA2: 'TVA2',
  MttTVA2: 'MttTVA2',
  TypeTVA2: 'TypeTVA2',
  TVA3: 'TVA3',
  MttTVA3: 'MttTVA3',
  TypeTVA3: 'TypeTVA3',
  PTTC: 'PTTC',
  Code: 'Code',
  Transformer: 'Transformer'
});

exports.Prisma.FA_LigneBonLivraisonScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  Reference: 'Reference',
  Designation: 'Designation',
  Glossaire: 'Glossaire',
  Quantite: 'Quantite',
  Unite: 'Unite',
  PUHT: 'PUHT',
  Remise: 'Remise',
  MttRemise: 'MttRemise',
  THT: 'THT',
  TVA1: 'TVA1',
  MttTVA1: 'MttTVA1',
  TypeTVA1: 'TypeTVA1',
  TVA2: 'TVA2',
  MttTVA2: 'MttTVA2',
  TypeTVA2: 'TypeTVA2',
  TVA3: 'TVA3',
  MttTVA3: 'MttTVA3',
  TypeTVA3: 'TypeTVA3',
  PTTC: 'PTTC',
  Code: 'Code',
  Transformer: 'Transformer'
});

exports.Prisma.FA_LigneDevisScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  Reference: 'Reference',
  Designation: 'Designation',
  Glossaire: 'Glossaire',
  Quantite: 'Quantite',
  Unite: 'Unite',
  PUHT: 'PUHT',
  Remise: 'Remise',
  MttRemise: 'MttRemise',
  THT: 'THT',
  TVA1: 'TVA1',
  MttTVA1: 'MttTVA1',
  TypeTVA1: 'TypeTVA1',
  TVA2: 'TVA2',
  MttTVA2: 'MttTVA2',
  TypeTVA2: 'TypeTVA2',
  TVA3: 'TVA3',
  MttTVA3: 'MttTVA3',
  TypeTVA3: 'TypeTVA3',
  PTTC: 'PTTC',
  Code: 'Code',
  Transformer: 'Transformer'
});

exports.Prisma.FA_LigneFactureScalarFieldEnum = makeEnum({
  NSouche: 'NSouche',
  DO_Piece: 'DO_Piece',
  Filiale: 'Filiale',
  Reference: 'Reference',
  Designation: 'Designation',
  Glossaire: 'Glossaire',
  Quantite: 'Quantite',
  Unite: 'Unite',
  PUHT: 'PUHT',
  Remise: 'Remise',
  MttRemise: 'MttRemise',
  THT: 'THT',
  TVA1: 'TVA1',
  MttTVA1: 'MttTVA1',
  TypeTVA1: 'TypeTVA1',
  TVA2: 'TVA2',
  MttTVA2: 'MttTVA2',
  TypeTVA2: 'TypeTVA2',
  TVA3: 'TVA3',
  MttTVA3: 'MttTVA3',
  TypeTVA3: 'TypeTVA3',
  PTTC: 'PTTC',
  Code: 'Code',
  Transformer: 'Transformer',
  LieuDepart: 'LieuDepart',
  LieuArrive: 'LieuArrive',
  TypeBT: 'TypeBT',
  Marchandise: 'Marchandise',
  DateBT: 'DateBT',
  Distance: 'Distance',
  CodeMission: 'CodeMission'
});

exports.Prisma.FA_ModeReglementScalarFieldEnum = makeEnum({
  CodeM: 'CodeM',
  IntituleM: 'IntituleM',
  TypeM: 'TypeM',
  CodeJournauxA: 'CodeJournauxA',
  CodeJournauxV: 'CodeJournauxV'
});

exports.Prisma.FA_OperationcontratScalarFieldEnum = makeEnum({
  Code: 'Code',
  DesignationContrat: 'DesignationContrat'
});

exports.Prisma.FA_OperationcoutScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designationcout: 'Designationcout',
  Type: 'Type'
});

exports.Prisma.FA_ProduitsScalarFieldEnum = makeEnum({
  RefProduit: 'RefProduit',
  DesignProduit: 'DesignProduit',
  CodeF: 'CodeF',
  Etat: 'Etat',
  CodeU: 'CodeU',
  PrixHT: 'PrixHT',
  PrixVente: 'PrixVente',
  Qte: 'Qte',
  Marge: 'Marge',
  TVA: 'TVA'
});

exports.Prisma.FA_ProvenanceTScalarFieldEnum = makeEnum({
  CodeProv: 'CodeProv',
  DesignProvT: 'DesignProvT'
});

exports.Prisma.FA_SectionAnalytiqueScalarFieldEnum = makeEnum({
  CodeS: 'CodeS',
  DesignS: 'DesignS'
});

exports.Prisma.FA_SensTScalarFieldEnum = makeEnum({
  CodeSensT: 'CodeSensT',
  designSensT: 'designSensT'
});

exports.Prisma.FA_SoucheScalarFieldEnum = makeEnum({
  CodeSouche: 'CodeSouche',
  IntituleSouche: 'IntituleSouche',
  NDevisSouche: 'NDevisSouche',
  NBCSouche: 'NBCSouche',
  NBLSouche: 'NBLSouche',
  NFactureSouche: 'NFactureSouche',
  NFactureRSouche: 'NFactureRSouche',
  NRegAchSouche: 'NRegAchSouche',
  NRegVenSouche: 'NRegVenSouche',
  DefaultS: 'DefaultS'
});

exports.Prisma.FA_TaxeScalarFieldEnum = makeEnum({
  CodeT: 'CodeT',
  IntituleT: 'IntituleT',
  DescTaux: 'DescTaux',
  TauxT: 'TauxT',
  CGNum: 'CGNum',
  SensT: 'SensT',
  TypeT: 'TypeT',
  CodeRegrouppement: 'CodeRegrouppement',
  Assujettissement: 'Assujettissement',
  provenance: 'provenance'
});

exports.Prisma.FA_TypeBTScalarFieldEnum = makeEnum({
  CodeTypeBT: 'CodeTypeBT',
  DesignTypeBT: 'DesignTypeBT',
  AR_Design: 'AR_Design'
});

exports.Prisma.FA_TypeChargeScalarFieldEnum = makeEnum({
  Code: 'Code',
  TypeCharge: 'TypeCharge'
});

exports.Prisma.FA_TypeParametreScalarFieldEnum = makeEnum({
  CodePar: 'CodePar',
  DesignPar: 'DesignPar'
});

exports.Prisma.FA_TypeTaxeScalarFieldEnum = makeEnum({
  CodeTypeT: 'CodeTypeT',
  DesignTypeT: 'DesignTypeT'
});

exports.Prisma.FA_UniteScalarFieldEnum = makeEnum({
  CodeU: 'CodeU',
  DesignU: 'DesignU'
});

exports.Prisma.FC_BanqueScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.FC_CompteBancaireScalarFieldEnum = makeEnum({
  CompteBancaire: 'CompteBancaire',
  Banque: 'Banque'
});

exports.Prisma.FC_ModeReglementScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation',
  Retenu: 'Retenu'
});

exports.Prisma.FC_ReglementScalarFieldEnum = makeEnum({
  NPiece: 'NPiece',
  NReglement: 'NReglement',
  CompteBancaire: 'CompteBancaire',
  ModeReglement: 'ModeReglement',
  Montant: 'Montant',
  Date: 'Date',
  DateEcheance: 'DateEcheance',
  Fournisseur: 'Fournisseur',
  Libelle: 'Libelle',
  MontantImpute: 'MontantImpute',
  MontantRestant: 'MontantRestant',
  Retenu: 'Retenu',
  TauxRetenu: 'TauxRetenu',
  NReglementRetenu: 'NReglementRetenu'
});

exports.Prisma.FC_ReglementFactureScalarFieldEnum = makeEnum({
  NDocAchat: 'NDocAchat',
  NReglement: 'NReglement',
  NFacture: 'NFacture',
  MontantImpute: 'MontantImpute',
  Code: 'Code'
});

exports.Prisma.FilialeScalarFieldEnum = makeEnum({
  CodeFilial: 'CodeFilial',
  DesignationFilial: 'DesignationFilial'
});

exports.Prisma.FilialeBlocageKmsScalarFieldEnum = makeEnum({
  Login: 'Login',
  DiffKMS: 'DiffKMS',
  Etat: 'Etat'
});

exports.Prisma.FlexiblesScalarFieldEnum = makeEnum({
  NSerieFlex: 'NSerieFlex',
  RefFlexcib: 'RefFlexcib',
  CumulFlexib: 'CumulFlexib',
  DateMontageFlex: 'DateMontageFlex',
  DateMorgFlex: 'DateMorgFlex'
});

exports.Prisma.FonctionScalarFieldEnum = makeEnum({
  CodeFonc: 'CodeFonc',
  designation: 'designation'
});

exports.Prisma.FormeSourceScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.FournisseurScalarFieldEnum = makeEnum({
  CodeFr: 'CodeFr',
  IntituleFr: 'IntituleFr',
  ActiviteFr: 'ActiviteFr',
  AdresseFr: 'AdresseFr',
  VilleFr: 'VilleFr',
  CpFr: 'CpFr',
  RegionFr: 'RegionFr',
  CodePays: 'CodePays',
  TelephFr: 'TelephFr',
  NomctctFr: 'NomctctFr',
  PortblFr: 'PortblFr',
  FaxFr: 'FaxFr',
  EmailFr: 'EmailFr',
  FctctctFr: 'FctctctFr',
  SiteFr: 'SiteFr',
  ObservationsFr: 'ObservationsFr',
  Etat: 'Etat',
  MatriculeFiscale: 'MatriculeFiscale',
  TauxRetenu: 'TauxRetenu'
});

exports.Prisma.GouvernoratScalarFieldEnum = makeEnum({
  CodeGouv: 'CodeGouv',
  designationGouv: 'designationGouv'
});

exports.Prisma.GroupsUtilisateursScalarFieldEnum = makeEnum({
  CodeDroit: 'CodeDroit',
  DesignationDroit: 'DesignationDroit'
});

exports.Prisma.HistoriqueAnomalieGazoilScalarFieldEnum = makeEnum({
  Code: 'Code',
  NumOrdre: 'NumOrdre',
  CodeFilial: 'CodeFilial',
  DateOrdre: 'DateOrdre',
  ImmatriculationVeh: 'ImmatriculationVeh',
  MatriculeC: 'MatriculeC',
  IndexVeh: 'IndexVeh',
  QteGaz: 'QteGaz',
  MoyConsReel: 'MoyConsReel',
  MoyConTeor: 'MoyConTeor'
});

exports.Prisma.HistoriqueDemontageScalarFieldEnum = makeEnum({
  NumOrdreRepar: 'NumOrdreRepar',
  RefArtic: 'RefArtic',
  NSerie: 'NSerie',
  CodeFilial: 'CodeFilial',
  Prix: 'Prix',
  CodeVehRem: 'CodeVehRem',
  RefAchat: 'RefAchat',
  CodeFilialeAchat: 'CodeFilialeAchat',
  Origine: 'Origine',
  NumLigne: 'NumLigne'
});

exports.Prisma.HistoriqueIndexPompeScalarFieldEnum = makeEnum({
  code_index: 'code_index',
  date_index: 'date_index',
  Code_Pompe: 'Code_Pompe',
  indexPop: 'indexPop'
});

exports.Prisma.HistoriqueIndexVehiculeScalarFieldEnum = makeEnum({
  code_index: 'code_index',
  date_index: 'date_index',
  ImmatriculationVeh: 'ImmatriculationVeh',
  index_veh: 'index_veh',
  tachygraphe: 'tachygraphe',
  NumOrdre: 'NumOrdre',
  Filiale: 'Filiale',
  FrmSource: 'FrmSource',
  NumLigne: 'NumLigne',
  etat: 'etat'
});

exports.Prisma.HistoriquePneumatiqueScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  RefArtic: 'RefArtic',
  NSerie: 'NSerie',
  DateMontage: 'DateMontage',
  PositionP: 'PositionP',
  DateDemontage: 'DateDemontage',
  IndexMontagHPneu: 'IndexMontagHPneu',
  IndexDemontagHPneu: 'IndexDemontagHPneu',
  NumOrdreMontage: 'NumOrdreMontage',
  NumOrdreDemontage: 'NumOrdreDemontage',
  CodeFilialeMontage: 'CodeFilialeMontage',
  CodeFilialeDemontage: 'CodeFilialeDemontage'
});

exports.Prisma.HistoriquePrixScalarFieldEnum = makeEnum({
  RefAch: 'RefAch',
  CodeFilial: 'CodeFilial',
  RefArtic: 'RefArtic',
  NSerie: 'NSerie',
  PrixUnit: 'PrixUnit',
  ImmatVehRem: 'ImmatVehRem',
  Origine: 'Origine',
  Code: 'Code'
});

exports.Prisma.HuileEssuiGlassScalarFieldEnum = makeEnum({
  CodeHEssuiGlass: 'CodeHEssuiGlass',
  DesigHEssuiGlass: 'DesigHEssuiGlass'
});

exports.Prisma.HuileGasoilScalarFieldEnum = makeEnum({
  CodeHuileGa: 'CodeHuileGa',
  DesiHuileGa: 'DesiHuileGa'
});

exports.Prisma.HuilePontArrScalarFieldEnum = makeEnum({
  CodeHPontA: 'CodeHPontA',
  DesigHPontA: 'DesigHPontA'
});

exports.Prisma.HuilePriseMvtScalarFieldEnum = makeEnum({
  CodeHPriseMvt: 'CodeHPriseMvt',
  DesigHPriseMvt: 'DesigHPriseMvt'
});

exports.Prisma.HuileReductRouScalarFieldEnum = makeEnum({
  CodeHReductRou: 'CodeHReductRou',
  DesigHReductRou: 'DesigHReductRou'
});

exports.Prisma.ImageScalarFieldEnum = makeEnum({
  Code_I: 'Code_I',
  Ref: 'Ref',
  Codefiliale: 'Codefiliale',
  Img: 'Img',
  TypeImg: 'TypeImg'
});

exports.Prisma.ImageAccidentScalarFieldEnum = makeEnum({
  Code_I: 'Code_I',
  Ref: 'Ref',
  Codefiliale: 'Codefiliale',
  Img: 'Img',
  TypeImg: 'TypeImg'
});

exports.Prisma.ImageAffaireScalarFieldEnum = makeEnum({
  Code_I: 'Code_I',
  Affaire: 'Affaire',
  IMG: 'IMG'
});

exports.Prisma.ImageAffectationVehiculeScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  Vehicule: 'Vehicule',
  DateAffectation: 'DateAffectation',
  Image: 'Image'
});

exports.Prisma.ImageAssuranceScalarFieldEnum = makeEnum({
  Code_I: 'Code_I',
  Assurance: 'Assurance',
  NContrat: 'NContrat',
  Image: 'Image'
});

exports.Prisma.ImageChauffeurScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  Chauffeur: 'Chauffeur',
  Image: 'Image'
});

exports.Prisma.ImageConvoyeurScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  Convoyeur: 'Convoyeur',
  Image: 'Image'
});

exports.Prisma.ImageDevisScalarFieldEnum = makeEnum({
  Code_I: 'Code_I',
  Devis: 'Devis',
  IMG: 'IMG'
});

exports.Prisma.ImageMecanicienScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  Mecanicien: 'Mecanicien',
  Image: 'Image'
});

exports.Prisma.ImageORScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  OREP: 'OREP',
  Image: 'Image'
});

exports.Prisma.ImagePersonnelScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  Personnel: 'Personnel',
  Image: 'Image'
});

exports.Prisma.ImageTaxeScalarFieldEnum = makeEnum({
  Code_I: 'Code_I',
  NContrat: 'NContrat',
  Image: 'Image'
});

exports.Prisma.ImageVehiculeScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  Vehicule: 'Vehicule',
  Image: 'Image'
});

exports.Prisma.ImageVisiteTechniqueScalarFieldEnum = makeEnum({
  Code_I: 'Code_I',
  NContrat: 'NContrat',
  Image: 'Image'
});

exports.Prisma.JdeScalarFieldEnum = makeEnum({
  CodeJde: 'CodeJde',
  codeclient: 'codeclient',
  ImmatriculationVeh: 'ImmatriculationVeh'
});

exports.Prisma.LieuChargementScalarFieldEnum = makeEnum({
  CodeLieuCharg: 'CodeLieuCharg',
  DesigLieuCharg: 'DesigLieuCharg',
  AR_Design: 'AR_Design',
  CodeRegion: 'CodeRegion',
  Abreviation: 'Abreviation'
});

exports.Prisma.LieuCouchageScalarFieldEnum = makeEnum({
  CodeLieuCouchage: 'CodeLieuCouchage',
  DesigLieuCouchage: 'DesigLieuCouchage'
});

exports.Prisma.LieuDechargementScalarFieldEnum = makeEnum({
  CodeLieudeCharg: 'CodeLieudeCharg',
  DesigLieudeCharg: 'DesigLieudeCharg',
  KMS: 'KMS',
  AR_Design: 'AR_Design',
  CodeRegion: 'CodeRegion',
  Abreviation: 'Abreviation'
});

exports.Prisma.LieuRepotScalarFieldEnum = makeEnum({
  CodeLieuRepot: 'CodeLieuRepot',
  DesigLieuRepot: 'DesigLieuRepot'
});

exports.Prisma.LigneOrdreReparationScalarFieldEnum = makeEnum({
  NumOrdreRepar: 'NumOrdreRepar',
  CodeFilial: 'CodeFilial',
  RefArtic: 'RefArtic',
  Prix: 'Prix',
  CodeVehRem: 'CodeVehRem',
  CodeOrgane: 'CodeOrgane',
  codeCategRep: 'codeCategRep',
  QteRepArt: 'QteRepArt',
  NumLigne: 'NumLigne',
  Marque: 'Marque',
  QteStk: 'QteStk',
  TypeRep: 'TypeRep'
});

exports.Prisma.LigneOrdreSortieScalarFieldEnum = makeEnum({
  Ref_E: 'Ref_E',
  CodeFilial: 'CodeFilial',
  RefArtic: 'RefArtic',
  PrixUnit: 'PrixUnit',
  CodeLoc: 'CodeLoc',
  Qte: 'Qte',
  Serial: 'Serial',
  ImmatriculationVeh: 'ImmatriculationVeh',
  Code: 'Code',
  NInv: 'NInv',
  QteEnStock: 'QteEnStock'
});

exports.Prisma.ListeClientScalarFieldEnum = makeEnum({
  CodeCl: 'CodeCl',
  IntituleClient: 'IntituleClient',
  CodeClient: 'CodeClient',
  RegionCl: 'RegionCl',
  Observations: 'Observations',
  ActiviteCl: 'ActiviteCl',
  AdresseCl: 'AdresseCl',
  VilleCl: 'VilleCl',
  CpCl: 'CpCl',
  CodePays: 'CodePays',
  TelephCl: 'TelephCl',
  Portable: 'Portable',
  EmailCl: 'EmailCl',
  SiteCl: 'SiteCl',
  RefDep: 'RefDep',
  EtatCli: 'EtatCli'
});

exports.Prisma.LocationScalarFieldEnum = makeEnum({
  CodeLoc: 'CodeLoc',
  DesigLoc: 'DesigLoc',
  CodeFilial: 'CodeFilial'
});

exports.Prisma.LocationArticleScalarFieldEnum = makeEnum({
  RefArtic: 'RefArtic',
  CodeLoc: 'CodeLoc'
});

exports.Prisma.MarqueArticleScalarFieldEnum = makeEnum({
  CodeAuto: 'CodeAuto',
  RefArtic: 'RefArtic',
  Code: 'Code'
});

exports.Prisma.MarquePneuScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.MarqueVehiculeScalarFieldEnum = makeEnum({
  CodeMarVeh: 'CodeMarVeh',
  DesigMarque: 'DesigMarque'
});

exports.Prisma.MecanicienScalarFieldEnum = makeEnum({
  MatriculeM: 'MatriculeM',
  PrenomM: 'PrenomM',
  NomM: 'NomM',
  DateEmbaucheM: 'DateEmbaucheM',
  NCinM: 'NCinM',
  DateNaissanceM: 'DateNaissanceM',
  TelephM: 'TelephM',
  PortableM: 'PortableM',
  EmailM: 'EmailM',
  AdresseM: 'AdresseM',
  VilleM: 'VilleM',
  CpM: 'CpM',
  NiveauM: 'NiveauM',
  ObservationM: 'ObservationM',
  EtatM: 'EtatM',
  Photo: 'Photo',
  Permis: 'Permis',
  Qualification: 'Qualification',
  GSang: 'GSang'
});

exports.Prisma.Mecanicien_LieuScalarFieldEnum = makeEnum({
  CodeLieu: 'CodeLieu',
  MatriculeC: 'MatriculeC',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Code: 'Code'
});

exports.Prisma.MecanicienTravauxScalarFieldEnum = makeEnum({
  NumOrdreRepar: 'NumOrdreRepar',
  CodeFilial: 'CodeFilial',
  TravDem: 'TravDem',
  CodeVehRem: 'CodeVehRem',
  cbMarq: 'cbMarq',
  MatriculeM: 'MatriculeM',
  PrenomM: 'PrenomM',
  NomM: 'NomM',
  Temps: 'Temps',
  RAF: 'RAF'
});

exports.Prisma.MissionScalarFieldEnum = makeEnum({
  CodeMiss: 'CodeMiss',
  libelle: 'libelle',
  DateD: 'DateD',
  DateF: 'DateF',
  IndexCout: 'IndexCout',
  Information: 'Information',
  Etat: 'Etat',
  QteInit: 'QteInit',
  ParcourD: 'ParcourD',
  ParcourF: 'ParcourF',
  Qte: 'Qte',
  Depart: 'Depart',
  Arriver: 'Arriver',
  NBHeureTrv: 'NBHeureTrv',
  CodeChauff: 'CodeChauff',
  NTelephone: 'NTelephone',
  Lieu: 'Lieu',
  CodeVeh: 'CodeVeh',
  MatriculeRem: 'MatriculeRem',
  Kms: 'Kms',
  HeureDemTrv: 'HeureDemTrv',
  MatriculeM: 'MatriculeM',
  MatVehMec: 'MatVehMec',
  IndexD: 'IndexD',
  HeureDepart: 'HeureDepart',
  HeureDTrv: 'HeureDTrv',
  HeureFTrv: 'HeureFTrv',
  HeureRetour: 'HeureRetour',
  IndexF: 'IndexF',
  CodeTypeMission: 'CodeTypeMission',
  T_CodeCl: 'T_CodeCl',
  T_Depcharger: 'T_Depcharger',
  T_DepVide: 'T_DepVide',
  T_Depsolo: 'T_Depsolo',
  T_Rcharger: 'T_Rcharger',
  T_RVide: 'T_RVide',
  T_Rsolo: 'T_Rsolo',
  T_Convoyeur: 'T_Convoyeur',
  T_LieuChargement: 'T_LieuChargement',
  T_LieuDechargement: 'T_LieuDechargement',
  T_NFR: 'T_NFR',
  T_NBI: 'T_NBI',
  T_Instruction: 'T_Instruction',
  T_Materiel: 'T_Materiel',
  DateMission: 'DateMission',
  T_ReglComptant: 'T_ReglComptant',
  T_ReglATerme: 'T_ReglATerme',
  RecurrencePattern: 'RecurrencePattern',
  MatriculeCahufPane: 'MatriculeCahufPane',
  NordreRep: 'NordreRep',
  CodeReg: 'CodeReg',
  NbMinute: 'NbMinute',
  InfoLibre1: 'InfoLibre1',
  InfoLibre2: 'InfoLibre2',
  InfoLibre3: 'InfoLibre3',
  InfoLibre4: 'InfoLibre4',
  InfoLibre5: 'InfoLibre5',
  InfoLibre6: 'InfoLibre6',
  InfoLibre7: 'InfoLibre7',
  InfoLibre8: 'InfoLibre8',
  InfoLibre9: 'InfoLibre9',
  InfoLibre10: 'InfoLibre10',
  InfoLibre11: 'InfoLibre11',
  InfoLibre12: 'InfoLibre12',
  InfoLibre13: 'InfoLibre13',
  InfoLibre14: 'InfoLibre14',
  InfoLibre15: 'InfoLibre15',
  InfoLibre16: 'InfoLibre16',
  InfoLibre17: 'InfoLibre17',
  InfoLibre18: 'InfoLibre18',
  InfoLibre19: 'InfoLibre19',
  InfoLibre20: 'InfoLibre20',
  CodeFilial: 'CodeFilial',
  NConteneur: 'NConteneur',
  jde: 'jde',
  codeDepot: 'codeDepot',
  NTournee: 'NTournee',
  NBL: 'NBL',
  DateCloture: 'DateCloture',
  HeureCloture: 'HeureCloture',
  Responsable: 'Responsable',
  TypeMissionExpl: 'TypeMissionExpl',
  UnJour: 'UnJour',
  DeuxJour: 'DeuxJour',
  TroisPlusJ: 'TroisPlusJ',
  Autoroute: 'Autoroute',
  RouteNationale: 'RouteNationale',
  RouteSecondaire: 'RouteSecondaire',
  DistanceConvMissAR: 'DistanceConvMissAR',
  Ecart: 'Ecart',
  Tarif: 'Tarif',
  ChargeSociete: 'ChargeSociete',
  ChargeClient: 'ChargeClient',
  Chauffeur2: 'Chauffeur2',
  StatutMiss: 'StatutMiss',
  FamilleMiss: 'FamilleMiss',
  TypeMissionTransport: 'TypeMissionTransport',
  BT_NDoc: 'BT_NDoc',
  BT_DateDoc: 'BT_DateDoc',
  BT_NRecu: 'BT_NRecu',
  BT_DateRecu: 'BT_DateRecu',
  BT_Produit: 'BT_Produit',
  BT_Marchandise: 'BT_Marchandise',
  BT_TVA: 'BT_TVA',
  Observations: 'Observations',
  BT_Distance: 'BT_Distance',
  BT_LieuDepart: 'BT_LieuDepart',
  BT_LieuArrive: 'BT_LieuArrive',
  BT_Taxe1: 'BT_Taxe1',
  BT_MttTVA1: 'BT_MttTVA1',
  BT_Taxe2: 'BT_Taxe2',
  BT_MttTVA2: 'BT_MttTVA2',
  BT_Taxe3: 'BT_Taxe3',
  BT_MttTVA3: 'BT_MttTVA3',
  BT_BruteHT: 'BT_BruteHT',
  BT_Remise: 'BT_Remise',
  BT_NetHT: 'BT_NetHT',
  BT_TypeFacUtilis_: 'BT_TypeFacUtilis_',
  BT_PrixUn: 'BT_PrixUn',
  BT_TypeBT: 'BT_TypeBT',
  TransformerSource: 'TransformerSource',
  TransformerDest: 'TransformerDest',
  BT_Unite: 'BT_Unite',
  BT_Ecart: 'BT_Ecart',
  TypeTVA1: 'TypeTVA1',
  TypeTVA2: 'TypeTVA2',
  TypeTVA3: 'TypeTVA3',
  Formule: 'Formule',
  NV_Tarif: 'NV_Tarif',
  CodeFormule: 'CodeFormule',
  BT_Contrat: 'BT_Contrat',
  Representant: 'Representant',
  SousClient: 'SousClient'
});

exports.Prisma.Mission_PersonnelsScalarFieldEnum = makeEnum({
  Code: 'Code',
  CodeMiss: 'CodeMiss',
  MatriculeP: 'MatriculeP'
});

exports.Prisma.Missions_ClientsScalarFieldEnum = makeEnum({
  Code: 'Code',
  CodeMiss: 'CodeMiss',
  CodeCl: 'CodeCl',
  DesignationSClient: 'DesignationSClient',
  Qte: 'Qte',
  BL: 'BL',
  Destination: 'Destination',
  T_LieuRepot: 'T_LieuRepot',
  T_LieuCouchage: 'T_LieuCouchage',
  CodeDestination: 'CodeDestination',
  DistanceConv: 'DistanceConv',
  HeureD: 'HeureD',
  HeureF: 'HeureF'
});

exports.Prisma.Missions_ConvoyeurScalarFieldEnum = makeEnum({
  CodeMission: 'CodeMission',
  MatriculeC: 'MatriculeC'
});

exports.Prisma.Missions_LieuDeChargementScalarFieldEnum = makeEnum({
  CodeMission: 'CodeMission',
  LieuDeChargement: 'LieuDeChargement'
});

exports.Prisma.OeilBoiteVitesseScalarFieldEnum = makeEnum({
  CodeOeilBteVit: 'CodeOeilBteVit',
  DesigOeilBteVit: 'DesigOeilBteVit'
});

exports.Prisma.OeilDirectionScalarFieldEnum = makeEnum({
  CodeOeilDirec: 'CodeOeilDirec',
  DesigOeilDirec: 'DesigOeilDirec'
});

exports.Prisma.OeilEmbrayageScalarFieldEnum = makeEnum({
  CodeOeilEmbr: 'CodeOeilEmbr',
  DesigOeilEmbr: 'DesigOeilEmbr'
});

exports.Prisma.OeilFreinScalarFieldEnum = makeEnum({
  CodeOeilFrein: 'CodeOeilFrein',
  DesigOeilFrein: 'DesigOeilFrein'
});

exports.Prisma.OeilMoteurScalarFieldEnum = makeEnum({
  CodeOeilMot: 'CodeOeilMot',
  DesigOeilMot: 'DesigOeilMot'
});

exports.Prisma.OeilReferoidissementScalarFieldEnum = makeEnum({
  CodeOeilRefr: 'CodeOeilRefr',
  DesigOeilRefr: 'DesigOeilRefr'
});

exports.Prisma.OeilReservoireCarburentScalarFieldEnum = makeEnum({
  CodeOeilGasoil: 'CodeOeilGasoil',
  DesigOeilGasoil: 'DesigOeilGasoil'
});

exports.Prisma.OptionAssuranceScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.OrdreAchatGasoilScalarFieldEnum = makeEnum({
  RefAch: 'RefAch',
  CodeFilial: 'CodeFilial',
  DateAch: 'DateAch',
  RefFacture: 'RefFacture',
  CodeFr: 'CodeFr',
  CodeCl: 'CodeCl',
  HeureAchatGasoil: 'HeureAchatGasoil',
  MontantGlobal: 'MontantGlobal',
  Bloquer: 'Bloquer'
});

exports.Prisma.OrdreEntrerScalarFieldEnum = makeEnum({
  Ref_E: 'Ref_E',
  CodeFilial: 'CodeFilial',
  Date_E: 'Date_E',
  CodeCl: 'CodeCl',
  CodeEntrer: 'CodeEntrer',
  ImmatriculationVeh: 'ImmatriculationVeh',
  NumInventaire: 'NumInventaire'
});

exports.Prisma.OrdreGazoilScalarFieldEnum = makeEnum({
  NumOrdre: 'NumOrdre',
  CodeFilial: 'CodeFilial',
  DateOrdre: 'DateOrdre',
  Jour: 'Jour',
  Nuit: 'Nuit',
  Code_Pompe: 'Code_Pompe',
  MatriculePo: 'MatriculePo',
  CpteDepart: 'CpteDepart',
  CpteFin: 'CpteFin',
  HeureOrdreGasoil: 'HeureOrdreGasoil',
  Bloquer: 'Bloquer',
  TypeOR: 'TypeOR',
  StockInit: 'StockInit',
  StockFinal: 'StockFinal',
  DateFin: 'DateFin',
  HeureFin: 'HeureFin',
  Utilisateur: 'Utilisateur',
  UtilisateurCloture: 'UtilisateurCloture'
});

exports.Prisma.OrdreReparationScalarFieldEnum = makeEnum({
  NumOrdreRepar: 'NumOrdreRepar',
  CodeFilial: 'CodeFilial',
  DateOrdre: 'DateOrdre',
  ImmatriculationVeh: 'ImmatriculationVeh',
  indexVeh: 'indexVeh',
  MatriculeRem: 'MatriculeRem',
  indexRem: 'indexRem',
  MatriculeC: 'MatriculeC',
  CodeCl: 'CodeCl',
  HeureOrdreRep: 'HeureOrdreRep',
  DernierIndex: 'DernierIndex',
  NouvIndex: 'NouvIndex',
  IndexT: 'IndexT',
  IndexTAvModif: 'IndexTAvModif',
  IndexCorr2010: 'IndexCorr2010',
  Bloquer: 'Bloquer',
  Interieur: 'Interieur',
  Exterieur: 'Exterieur',
  Curatif: 'Curatif',
  Pr_ventif: 'Pr_ventif',
  BlocNotes: 'BlocNotes',
  DateFin: 'DateFin',
  HeureFin: 'HeureFin',
  CodeMiss: 'CodeMiss',
  CodeSousClient: 'CodeSousClient',
  SousClient: 'SousClient',
  Statut: 'Statut',
  Utilisateur: 'Utilisateur',
  UtilisateurCloture: 'UtilisateurCloture'
});

exports.Prisma.OrdreSortieScalarFieldEnum = makeEnum({
  Ref_E: 'Ref_E',
  CodeFilial: 'CodeFilial',
  Date_E: 'Date_E',
  CodeCl: 'CodeCl',
  CodeEntrer: 'CodeEntrer',
  ImmatriculationVeh: 'ImmatriculationVeh',
  NumInventaire: 'NumInventaire'
});

exports.Prisma.OrdreTransfertCarburantScalarFieldEnum = makeEnum({
  RefTransf: 'RefTransf',
  CodeFilialS: 'CodeFilialS',
  CodeFilialDest: 'CodeFilialDest',
  Date_Transf: 'Date_Transf',
  Heure_Transf: 'Heure_Transf',
  CodeClDest: 'CodeClDest',
  Etat: 'Etat',
  CodeAuto: 'CodeAuto'
});

exports.Prisma.OrganeScalarFieldEnum = makeEnum({
  CodeOrgane: 'CodeOrgane',
  DesignOrgane: 'DesignOrgane'
});

exports.Prisma.P_CATEGORIETPScalarFieldEnum = makeEnum({
  TP_Intitule: 'TP_Intitule',
  TP_Taux: 'TP_Taux',
  TP_Plancher: 'TP_Plancher',
  TP_Plafond: 'TP_Plafond',
  cbIndice: 'cbIndice',
  cbMarq: 'cbMarq'
});

exports.Prisma.P_CONVEUROIMMOScalarFieldEnum = makeEnum({
  C_BasculeCompte: 'C_BasculeCompte',
  cbMarq: 'cbMarq'
});

exports.Prisma.P_DOSSIERScalarFieldEnum = makeEnum({
  D_RaisonSoc: 'D_RaisonSoc',
  D_Profession: 'D_Profession',
  D_Adresse: 'D_Adresse',
  D_Complement: 'D_Complement',
  D_CodePostal: 'D_CodePostal',
  D_Ville: 'D_Ville',
  D_CodeRegion: 'D_CodeRegion',
  D_Pays: 'D_Pays',
  D_Commentaire: 'D_Commentaire',
  D_Siret: 'D_Siret',
  D_Ape: 'D_Ape',
  D_Identifiant: 'D_Identifiant',
  D_DebutExo01: 'D_DebutExo01',
  D_DebutExo02: 'D_DebutExo02',
  D_DebutExo03: 'D_DebutExo03',
  D_DebutExo04: 'D_DebutExo04',
  D_DebutExo05: 'D_DebutExo05',
  D_FinExo01: 'D_FinExo01',
  D_FinExo02: 'D_FinExo02',
  D_FinExo03: 'D_FinExo03',
  D_FinExo04: 'D_FinExo04',
  D_FinExo05: 'D_FinExo05',
  D_LgCg: 'D_LgCg',
  D_LgAn: 'D_LgAn',
  D_FormatQtes: 'D_FormatQtes',
  D_CodeTrait: 'D_CodeTrait',
  D_ConfSupp: 'D_ConfSupp',
  D_AnalyseGL01: 'D_AnalyseGL01',
  D_AnalyseGL02: 'D_AnalyseGL02',
  D_AnalyseGL03: 'D_AnalyseGL03',
  D_Delai: 'D_Delai',
  D_OuvCompte: 'D_OuvCompte',
  D_Budget: 'D_Budget',
  D_SuppEc: 'D_SuppEc',
  D_RegTaxe: 'D_RegTaxe',
  D_Ventil: 'D_Ventil',
  D_Edi: 'D_Edi',
  D_Archivage01: 'D_Archivage01',
  D_Archivage02: 'D_Archivage02',
  D_Archivage03: 'D_Archivage03',
  D_Archivage04: 'D_Archivage04',
  D_Archivage05: 'D_Archivage05',
  D_RBSupp: 'D_RBSupp',
  D_MajImport: 'D_MajImport',
  D_SaisCab: 'D_SaisCab',
  D_TypeValid: 'D_TypeValid',
  D_ImpressZero: 'D_ImpressZero',
  N_DeviseCompte: 'N_DeviseCompte',
  N_DeviseEquival: 'N_DeviseEquival',
  D_ANSais: 'D_ANSais',
  JO_NumAN: 'JO_NumAN',
  CG_NumANOuv: 'CG_NumANOuv',
  CG_NumANBenef: 'CG_NumANBenef',
  CG_NumANPerte: 'CG_NumANPerte',
  D_TVAEncReg: 'D_TVAEncReg',
  D_TVAEncAffect: 'D_TVAEncAffect',
  D_DeviseEq: 'D_DeviseEq',
  D_AnAffect: 'D_AnAffect',
  D_ReglPiece: 'D_ReglPiece',
  D_ExtNeg: 'D_ExtNeg',
  D_RapproDevise: 'D_RapproDevise',
  D_ImportEqJo: 'D_ImportEqJo',
  D_ImportEqAn: 'D_ImportEqAn',
  CG_NumImportDebit: 'CG_NumImportDebit',
  CG_NumImportCredit: 'CG_NumImportCredit',
  N_Analytique: 'N_Analytique',
  D_NumDoss: 'D_NumDoss',
  D_EMail: 'D_EMail',
  D_EMailExpert: 'D_EMailExpert',
  D_Expert: 'D_Expert',
  D_Telephone: 'D_Telephone',
  D_Telecopie: 'D_Telecopie',
  D_EMailSoc: 'D_EMailSoc',
  D_Site: 'D_Site',
  D_AppelTiers: 'D_AppelTiers',
  D_AppelSection: 'D_AppelSection',
  D_ProtPiece: 'D_ProtPiece',
  D_NumCont: 'D_NumCont',
  D_DateClot: 'D_DateClot',
  D_CompteGTotal: 'D_CompteGTotal',
  D_RapproRecherche: 'D_RapproRecherche',
  D_RapproEcart: 'D_RapproEcart',
  CG_NumRappro: 'CG_NumRappro',
  D_RapproContrepartie: 'D_RapproContrepartie',
  D_ComSens: 'D_ComSens',
  D_ComType: 'D_ComType',
  D_ComMoyen: 'D_ComMoyen',
  D_ComSoft: 'D_ComSoft',
  D_ComCodeExpert: 'D_ComCodeExpert',
  D_ComDateSynchro: 'D_ComDateSynchro',
  D_ComGUID: 'D_ComGUID',
  D_RapproTypeEcart: 'D_RapproTypeEcart',
  D_RapproReport: 'D_RapproReport',
  JO_NumRapproEscCl: 'JO_NumRapproEscCl',
  PI_NoRapproEscCl: 'PI_NoRapproEscCl',
  JO_NumRapproEscFr: 'JO_NumRapproEscFr',
  PI_NoRapproEscFr: 'PI_NoRapproEscFr',
  D_GestionIFRS: 'D_GestionIFRS',
  D_SaisieIFRS: 'D_SaisieIFRS',
  N_AnalytiqueIFRS: 'N_AnalytiqueIFRS',
  JA_NumAN: 'JA_NumAN',
  JO_NumANIFRS: 'JO_NumANIFRS',
  JA_NumANIFRS: 'JA_NumANIFRS',
  D_RappelSoldeMin: 'D_RappelSoldeMin',
  D_ImportVentil: 'D_ImportVentil',
  D_PenalTaux: 'D_PenalTaux',
  D_PenalImputation: 'D_PenalImputation',
  JO_NumPenal: 'JO_NumPenal',
  PI_NoPenal: 'PI_NoPenal',
  D_Impayes: 'D_Impayes',
  JO_NumImpayes: 'JO_NumImpayes',
  PI_NoImpayes: 'PI_NoImpayes',
  D_ImpressFactRef: 'D_ImpressFactRef',
  D_SeuilTVA: 'D_SeuilTVA',
  D_NotSaisieSommeil: 'D_NotSaisieSommeil',
  D_NormeDGI: 'D_NormeDGI',
  D_ArchivePeriod: 'D_ArchivePeriod',
  D_ECNoCloture01: 'D_ECNoCloture01',
  D_ECNoCloture02: 'D_ECNoCloture02',
  D_ECNoCloture03: 'D_ECNoCloture03',
  D_ECNoCloture04: 'D_ECNoCloture04',
  D_ECNoCloture05: 'D_ECNoCloture05',
  D_CloturePeriod: 'D_CloturePeriod',
  cbMarq: 'cbMarq'
});

exports.Prisma.P_DOSSIERCIALScalarFieldEnum = makeEnum({
  D_RaisonS: 'D_RaisonS',
  D_FormatQte: 'D_FormatQte',
  D_FormatPrix: 'D_FormatPrix',
  N_DeviseCompte: 'N_DeviseCompte',
  N_DeviseEquival: 'N_DeviseEquival',
  D_ArchivePeriod: 'D_ArchivePeriod',
  D_ValiditePeriod: 'D_ValiditePeriod',
  cbMarq: 'cbMarq'
});

exports.Prisma.P_NATUREBIENScalarFieldEnum = makeEnum({
  B_Intitule: 'B_Intitule',
  B_Suivi: 'B_Suivi',
  B_Type: 'B_Type',
  B_Immeuble: 'B_Immeuble',
  cbIndice: 'cbIndice',
  cbMarq: 'cbMarq'
});

exports.Prisma.P_PREFERENCESIMMOScalarFieldEnum = makeEnum({
  PR_Virement: 'PR_Virement',
  PR_Degressif: 'PR_Degressif',
  PR_DotAnter: 'PR_DotAnter',
  PR_CalculCession: 'PR_CalculCession',
  PR_ReportArrondi: 'PR_ReportArrondi',
  PR_RecalculValCess: 'PR_RecalculValCess',
  PR_ClotureExercice: 'PR_ClotureExercice',
  PR_DateDot: 'PR_DateDot',
  PR_ComptaDotMens: 'PR_ComptaDotMens',
  cbMarq: 'cbMarq'
});

exports.Prisma.P_TIERSScalarFieldEnum = makeEnum({
  T_Principal: 'T_Principal',
  T_Val01T_Intitule: 'T_Val01T_Intitule',
  T_Val01T_TCompte: 'T_Val01T_TCompte',
  T_Val01T_Compte: 'T_Val01T_Compte',
  T_Val02T_Intitule: 'T_Val02T_Intitule',
  T_Val02T_TCompte: 'T_Val02T_TCompte',
  T_Val02T_Compte: 'T_Val02T_Compte',
  T_Val03T_Intitule: 'T_Val03T_Intitule',
  T_Val03T_TCompte: 'T_Val03T_TCompte',
  T_Val03T_Compte: 'T_Val03T_Compte',
  T_Val04T_Intitule: 'T_Val04T_Intitule',
  T_Val04T_TCompte: 'T_Val04T_TCompte',
  T_Val04T_Compte: 'T_Val04T_Compte',
  T_Val05T_Intitule: 'T_Val05T_Intitule',
  T_Val05T_TCompte: 'T_Val05T_TCompte',
  T_Val05T_Compte: 'T_Val05T_Compte',
  T_Val06T_Intitule: 'T_Val06T_Intitule',
  T_Val06T_TCompte: 'T_Val06T_TCompte',
  T_Val06T_Compte: 'T_Val06T_Compte',
  T_Val07T_Intitule: 'T_Val07T_Intitule',
  T_Val07T_TCompte: 'T_Val07T_TCompte',
  T_Val07T_Compte: 'T_Val07T_Compte',
  T_Val08T_Intitule: 'T_Val08T_Intitule',
  T_Val08T_TCompte: 'T_Val08T_TCompte',
  T_Val08T_Compte: 'T_Val08T_Compte',
  T_Val09T_Intitule: 'T_Val09T_Intitule',
  T_Val09T_TCompte: 'T_Val09T_TCompte',
  T_Val09T_Compte: 'T_Val09T_Compte',
  T_Val10T_Intitule: 'T_Val10T_Intitule',
  T_Val10T_TCompte: 'T_Val10T_TCompte',
  T_Val10T_Compte: 'T_Val10T_Compte',
  T_Numerotation: 'T_Numerotation',
  T_Lg: 'T_Lg',
  T_Racine: 'T_Racine',
  cbIndice: 'cbIndice',
  cbMarq: 'cbMarq'
});

exports.Prisma.Param_PneuScalarFieldEnum = makeEnum({
  RefArtPneu: 'RefArtPneu',
  EpaissMax: 'EpaissMax',
  EpaissMin: 'EpaissMin'
});

exports.Prisma.ParamDistanceConvScalarFieldEnum = makeEnum({
  CodeDepotRemplCarb: 'CodeDepotRemplCarb',
  DestinationMission: 'DestinationMission',
  Distance: 'Distance'
});

exports.Prisma.ParametrageScalarFieldEnum = makeEnum({
  DateOrdreReparation: 'DateOrdreReparation',
  DateOrdreCarburant: 'DateOrdreCarburant',
  LoginUser: 'LoginUser'
});

exports.Prisma.ParkScalarFieldEnum = makeEnum({
  CodeParc: 'CodeParc',
  DesigParc: 'DesigParc'
});

exports.Prisma.PaysScalarFieldEnum = makeEnum({
  CodePays: 'CodePays',
  DesignationP: 'DesignationP'
});

exports.Prisma.PersonnelScalarFieldEnum = makeEnum({
  MatriculeP: 'MatriculeP',
  PrenomC: 'PrenomC',
  NomC: 'NomC',
  DateEmbaucheC: 'DateEmbaucheC',
  NCinC: 'NCinC',
  DateNaissanceC: 'DateNaissanceC',
  TelephC: 'TelephC',
  PortableC: 'PortableC',
  EmailC: 'EmailC',
  AdresseC: 'AdresseC',
  VilleC: 'VilleC',
  CpC: 'CpC',
  NiveauC: 'NiveauC',
  ObsevationsC: 'ObsevationsC',
  EtatC: 'EtatC',
  Photo: 'Photo',
  Permis: 'Permis',
  PhotoCam: 'PhotoCam'
});

exports.Prisma.Plan_ActionScalarFieldEnum = makeEnum({
  ID: 'ID',
  Ref: 'Ref',
  CodeFiliale: 'CodeFiliale',
  Action: 'Action',
  Responsable: 'Responsable',
  DateAction: 'DateAction',
  CritereEfficacite: 'CritereEfficacite',
  Efficacite: 'Efficacite',
  DateCloture: 'DateCloture'
});

exports.Prisma.PneumatiqueScalarFieldEnum = makeEnum({
  RefArtic: 'RefArtic',
  NSerie: 'NSerie',
  DateMiseCirc: 'DateMiseCirc',
  IndexP: 'IndexP',
  DateArreCirc: 'DateArreCirc'
});

exports.Prisma.PompesScalarFieldEnum = makeEnum({
  Code_Pompe: 'Code_Pompe',
  CodeFilial: 'CodeFilial',
  DesignationPomp: 'DesignationPomp',
  RefPompe: 'RefPompe',
  CodeTyCarbu: 'CodeTyCarbu',
  Capacit__Pompe: 'Capacit__Pompe',
  Qt__Actuelle: 'Qt__Actuelle',
  Stock_min: 'Stock_min',
  CMUP: 'CMUP',
  IndexDepart: 'IndexDepart',
  QteInitial: 'QteInitial'
});

exports.Prisma.PompisteScalarFieldEnum = makeEnum({
  MatriculePo: 'MatriculePo',
  PrenomPo: 'PrenomPo',
  NomPo: 'NomPo',
  DateEmbauchePo: 'DateEmbauchePo',
  EtatPo: 'EtatPo',
  NCinPo: 'NCinPo',
  DateNaissancePo: 'DateNaissancePo',
  TelephPo: 'TelephPo',
  GSM_Po: 'GSM_Po',
  EmailPo: 'EmailPo',
  AdressePo: 'AdressePo',
  VillePo: 'VillePo',
  CpPo: 'CpPo',
  CodePays: 'CodePays',
  NumeroP: 'NumeroP',
  NiveauPo: 'NiveauPo',
  ObsevationsPo: 'ObsevationsPo',
  PhotoPo: 'PhotoPo'
});

exports.Prisma.Pompiste_CategPermisScalarFieldEnum = makeEnum({
  MatriculePo: 'MatriculePo',
  CodeCategorie: 'CodeCategorie',
  DateP: 'DateP'
});

exports.Prisma.PressionPneuScalarFieldEnum = makeEnum({
  RefArtPneu: 'RefArtPneu',
  NSeriePneu: 'NSeriePneu',
  NumOrdre: 'NumOrdre',
  CodeFiliale: 'CodeFiliale',
  Pression: 'Pression',
  DatePrelevem: 'DatePrelevem',
  HeurePreleve: 'HeurePreleve'
});

exports.Prisma.RapportAccidentScalarFieldEnum = makeEnum({
  Ref: 'Ref',
  CodeFiliale: 'CodeFiliale',
  Lieu: 'Lieu',
  Gouvernement: 'Gouvernement',
  Tracteur: 'Tracteur',
  Citerne: 'Citerne',
  Affectation: 'Affectation',
  Date: 'Date',
  HeureAccident: 'HeureAccident',
  Destination: 'Destination',
  Chauffeur: 'Chauffeur',
  AncienneteSMTT: 'AncienneteSMTT',
  ValiditePermis: 'ValiditePermis',
  ValiditeCertifMed: 'ValiditeCertifMed',
  ValiditeTMD: 'ValiditeTMD',
  DerniFormSecour: 'DerniFormSecour',
  DerniFormConduiteDef: 'DerniFormConduiteDef',
  DerniFormLutteIncendie: 'DerniFormLutteIncendie',
  DerniFormConduiteRation: 'DerniFormConduiteRation',
  Faits: 'Faits',
  ActionsPrise: 'ActionsPrise',
  CausesFond: 'CausesFond',
  CausesProf: 'CausesProf',
  Degats: 'Degats',
  Consequence: 'Consequence',
  IncidentEvite: 'IncidentEvite',
  LeconARetenir: 'LeconARetenir',
  MesureDisciplinaire: 'MesureDisciplinaire',
  EApersonne: 'EApersonne',
  EAbien: 'EAbien',
  EAenvironnement: 'EAenvironnement',
  EAimage: 'EAimage',
  EPpersonne1: 'EPpersonne1',
  EPbien1: 'EPbien1',
  EPenvironnement1: 'EPenvironnement1',
  EPimage1: 'EPimage1',
  EAclients: 'EAclients',
  EAresultats: 'EAresultats',
  EPclients: 'EPclients',
  EPresultats: 'EPresultats'
});

exports.Prisma.RegionScalarFieldEnum = makeEnum({
  CodeReg: 'CodeReg',
  designationReg: 'designationReg',
  codeGouv: 'codeGouv'
});

exports.Prisma.Region1ScalarFieldEnum = makeEnum({
  CodeReg: 'CodeReg',
  designationReg: 'designationReg',
  codeGouv: 'codeGouv'
});

exports.Prisma.RemorqueScalarFieldEnum = makeEnum({
  MatriculeRem: 'MatriculeRem',
  CodeTypeRemorque: 'CodeTypeRemorque',
  NChassisRem: 'NChassisRem',
  IndexRem: 'IndexRem',
  CumuleRem: 'CumuleRem',
  PoidsRem: 'PoidsRem',
  PtraRem: 'PtraRem',
  CapaciteRem: 'CapaciteRem',
  NbrCompRem: 'NbrCompRem',
  DesigTyPneu: 'DesigTyPneu',
  NbrPneuRem: 'NbrPneuRem',
  ChargeRem: 'ChargeRem',
  DateMC: 'DateMC',
  DateAchat: 'DateAchat',
  CodeParc: 'CodeParc',
  CodeCl: 'CodeCl',
  CodeTySusAv: 'CodeTySusAv',
  CodeTySusArr: 'CodeTySusArr',
  RefEssieu: 'RefEssieu',
  AbsRemork: 'AbsRemork',
  Gazoil: 'Gazoil',
  Observations: 'Observations',
  Remarques: 'Remarques',
  Etat: 'Etat',
  ABS: 'ABS',
  EBS: 'EBS',
  EssieuRelvable: 'EssieuRelvable',
  EssieuSuiveur: 'EssieuSuiveur',
  ChargementEnSource: 'ChargementEnSource',
  AffectationClient: 'AffectationClient',
  DerDateRenovation: 'DerDateRenovation',
  DateEtanchite: 'DateEtanchite',
  DiametreTrouHomme: 'DiametreTrouHomme',
  TypeJauge: 'TypeJauge',
  EtatImmo: 'EtatImmo',
  ValeurAcquisition: 'ValeurAcquisition'
});

exports.Prisma.Remorque_ExtincteurScalarFieldEnum = makeEnum({
  MatriculeRem: 'MatriculeRem',
  RefExtinct: 'RefExtinct',
  NSerieExtinct: 'NSerieExtinct',
  DateExtMontage: 'DateExtMontage',
  DateExtDemontage: 'DateExtDemontage',
  IndexExtMontage: 'IndexExtMontage',
  IndexExtDemontage: 'IndexExtDemontage',
  NumOrdreMontage: 'NumOrdreMontage',
  NumOrdreDemontageontage: 'NumOrdreDemontageontage',
  CodeFilialMontage: 'CodeFilialMontage',
  CodeFilialDemontage: 'CodeFilialDemontage'
});

exports.Prisma.Remorque_FlexiblesScalarFieldEnum = makeEnum({
  MatriculeRem: 'MatriculeRem',
  RefFlexcib: 'RefFlexcib',
  NSerieFlex: 'NSerieFlex',
  DateFlexMontage: 'DateFlexMontage',
  DateFlexDemontage: 'DateFlexDemontage',
  IndexFlxMontage: 'IndexFlxMontage',
  IndexFlxDemontage: 'IndexFlxDemontage',
  NumOrdreMontage: 'NumOrdreMontage',
  NumOrdreDemontage: 'NumOrdreDemontage',
  CodeFilialMontage: 'CodeFilialMontage',
  CodeFilialDemontage: 'CodeFilialDemontage'
});

exports.Prisma.RemplacerArticleScalarFieldEnum = makeEnum({
  Code: 'Code',
  RefArtic: 'RefArtic',
  Art_RefArtic: 'Art_RefArtic'
});

exports.Prisma.SerialiseArticleTempScalarFieldEnum = makeEnum({
  CodeTransfert: 'CodeTransfert',
  RefAch: 'RefAch',
  CodeFilial: 'CodeFilial',
  RefArtic: 'RefArtic',
  NSerie: 'NSerie',
  PrixUnit: 'PrixUnit',
  ImmatVehRem: 'ImmatVehRem',
  NumLigne: 'NumLigne',
  Etat: 'Etat',
  CodeFilialDest: 'CodeFilialDest',
  CodeFilialS: 'CodeFilialS',
  TypeOperation: 'TypeOperation'
});

exports.Prisma.SerialiserArticleScalarFieldEnum = makeEnum({
  RefAch: 'RefAch',
  CodeFilial: 'CodeFilial',
  RefArtic: 'RefArtic',
  NSerie: 'NSerie',
  PrixUnit: 'PrixUnit',
  ImmatVehRem: 'ImmatVehRem',
  NumLigne: 'NumLigne',
  Origine: 'Origine',
  CodeM: 'CodeM'
});

exports.Prisma.SerieArticleConsommerScalarFieldEnum = makeEnum({
  NumOrdreRepar: 'NumOrdreRepar',
  RefArtic: 'RefArtic',
  NSerie: 'NSerie',
  CodeFilial: 'CodeFilial',
  Prix: 'Prix',
  CodeVehRem: 'CodeVehRem',
  RefAchat: 'RefAchat',
  CodeFilialeAchat: 'CodeFilialeAchat',
  Origine: 'Origine',
  NumLigne: 'NumLigne'
});

exports.Prisma.ServiceScalarFieldEnum = makeEnum({
  CodeService: 'CodeService',
  designation: 'designation',
  CodeDirection: 'CodeDirection'
});

exports.Prisma.SituationScalarFieldEnum = makeEnum({
  CodeSituation: 'CodeSituation',
  DesigSituation: 'DesigSituation'
});

exports.Prisma.SousTraitanceScalarFieldEnum = makeEnum({
  CodeSousTraitance: 'CodeSousTraitance',
  IntituleSousTraitance: 'IntituleSousTraitance'
});

exports.Prisma.StatutMissionScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.StatutORScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.StockArticleScalarFieldEnum = makeEnum({
  RefArtic: 'RefArtic',
  PrixUnit: 'PrixUnit',
  CodeFilial: 'CodeFilial',
  CodeCl: 'CodeCl',
  QteAchat: 'QteAchat',
  QteConsommee: 'QteConsommee'
});

exports.Prisma.StockTempScalarFieldEnum = makeEnum({
  CodeTransfert: 'CodeTransfert',
  RefArtic: 'RefArtic',
  PrixUnit: 'PrixUnit',
  CodeFilial: 'CodeFilial',
  CodeCl: 'CodeCl',
  QteAchat: 'QteAchat',
  QteConsommee: 'QteConsommee',
  Etat: 'Etat'
});

exports.Prisma.StockTempTCarbScalarFieldEnum = makeEnum({
  CodeTransfert: 'CodeTransfert',
  CodeFilialS: 'CodeFilialS',
  TypeCab: 'TypeCab',
  PompeSour: 'PompeSour',
  PompeDest: 'PompeDest',
  PrixUnit: 'PrixUnit',
  QteAch: 'QteAch',
  QteConsommee: 'QteConsommee',
  Etat: 'Etat'
});

exports.Prisma.StructurePneumatiqueScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  PositionP: 'PositionP'
});

exports.Prisma.TachygrapheScalarFieldEnum = makeEnum({
  NSerie: 'NSerie',
  RefTachygraphe: 'RefTachygraphe',
  CumulTachyg: 'CumulTachyg',
  DateMontageTachyg: 'DateMontageTachyg',
  DateMorgueTachyg: 'DateMorgueTachyg'
});

exports.Prisma.TachygrapheVehiculReparScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  NSerie: 'NSerie',
  RefTachygraphe: 'RefTachygraphe',
  DateTachyMontag: 'DateTachyMontag',
  DateTachyDemontag: 'DateTachyDemontag',
  IndexTachygMontage: 'IndexTachygMontage',
  IndexTachygDemontage: 'IndexTachygDemontage',
  NumOrdreMontage: 'NumOrdreMontage',
  NumOrdreDemontage: 'NumOrdreDemontage',
  CodeFilialMontage: 'CodeFilialMontage',
  CodeFilialDemontage: 'CodeFilialDemontage'
});

exports.Prisma.TaxeVignette_ListeVehiculeScalarFieldEnum = makeEnum({
  Vehicule: 'Vehicule',
  NContrat: 'NContrat',
  MontantD_tail: 'MontantD_tail'
});

exports.Prisma.TaxeVignette_VehiculeScalarFieldEnum = makeEnum({
  NContrat: 'NContrat',
  DateEffetDebut: 'DateEffetDebut',
  DateEffetFin: 'DateEffetFin',
  R_f_rence: 'R_f_rence',
  Alerte: 'Alerte',
  Montant: 'Montant',
  Glossaire: 'Glossaire',
  Fractionnement: 'Fractionnement',
  Etat: 'Etat',
  Filiale: 'Filiale',
  Departement: 'Departement'
});

exports.Prisma.TCarteCarburantScalarFieldEnum = makeEnum({
  NumCarte: 'NumCarte',
  OperateurCarte: 'OperateurCarte',
  IntituleCarte: 'IntituleCarte',
  TypeCarte: 'TypeCarte',
  Vehicule: 'Vehicule',
  MatChauffeur: 'MatChauffeur',
  Etat: 'Etat',
  SoldeCarte: 'SoldeCarte',
  Departement: 'Departement',
  Direction: 'Direction',
  CodeCarte: 'CodeCarte',
  DateExpir: 'DateExpir',
  PrixUnitaire: 'PrixUnitaire'
});

exports.Prisma.TOperateurCarteScalarFieldEnum = makeEnum({
  CodeOperateur: 'CodeOperateur',
  OperateurCarte: 'OperateurCarte'
});

exports.Prisma.TransfertScalarFieldEnum = makeEnum({
  RefTransf: 'RefTransf',
  CodeFilialS: 'CodeFilialS',
  CodeFilialDest: 'CodeFilialDest',
  Date_Transf: 'Date_Transf',
  Heure_Transf: 'Heure_Transf',
  CodeClDest: 'CodeClDest',
  Etat: 'Etat',
  CodeTransfert: 'CodeTransfert',
  Utilisateur: 'Utilisateur'
});

exports.Prisma.TraveauxScalarFieldEnum = makeEnum({
  NumOrdreRepar: 'NumOrdreRepar',
  CodeFilial: 'CodeFilial',
  TravDem: 'TravDem',
  CodeVehRem: 'CodeVehRem',
  TravExec: 'TravExec',
  CodeOrgane: 'CodeOrgane',
  MatriculeM: 'MatriculeM',
  TempsTD: 'TempsTD',
  RAF: 'RAF',
  Prix_Heure: 'Prix_Heure',
  codeAuto: 'codeAuto',
  OrdreRAF: 'OrdreRAF',
  FilialeSource: 'FilialeSource',
  RAFExec: 'RAFExec',
  CodeIntervention: 'CodeIntervention',
  TypeRep: 'TypeRep'
});

exports.Prisma.TrouPneuScalarFieldEnum = makeEnum({
  RefArtPneu: 'RefArtPneu',
  NSeriePneu: 'NSeriePneu',
  NumOrdre: 'NumOrdre',
  CodeFiliale: 'CodeFiliale',
  NbrTrou: 'NbrTrou',
  DatePrelevem: 'DatePrelevem',
  HeurePreleve: 'HeurePreleve'
});

exports.Prisma.TypeAccidentScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation'
});

exports.Prisma.TypeAvantTrainScalarFieldEnum = makeEnum({
  CodeTyAvTr: 'CodeTyAvTr',
  DesigTyAvTr: 'DesigTyAvTr'
});

exports.Prisma.TypeBoiteDirectionScalarFieldEnum = makeEnum({
  CodeTyBtDir: 'CodeTyBtDir',
  DesigTyBtDir: 'DesigTyBtDir'
});

exports.Prisma.TypeBoiteVitesseScalarFieldEnum = makeEnum({
  CodeTyBteVit: 'CodeTyBteVit',
  DesigTyBteVit: 'DesigTyBteVit'
});

exports.Prisma.TypeCarburentScalarFieldEnum = makeEnum({
  CodeTyCarbu: 'CodeTyCarbu',
  DesigTyCarbu: 'DesigTyCarbu'
});

exports.Prisma.TypeCarteCarburantScalarFieldEnum = makeEnum({
  CodeTC: 'CodeTC',
  IntituleTypeCarte: 'IntituleTypeCarte'
});

exports.Prisma.TypeDocAdminScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation',
  TD: 'TD'
});

exports.Prisma.TypeEmbrayageScalarFieldEnum = makeEnum({
  CodeTyEmbr: 'CodeTyEmbr',
  DesigTyEmbr: 'DesigTyEmbr'
});

exports.Prisma.TypeEssieuScalarFieldEnum = makeEnum({
  RefEssieu: 'RefEssieu',
  DesigEssieu: 'DesigEssieu'
});

exports.Prisma.TypeExtincteursVehScalarFieldEnum = makeEnum({
  RefExtinct: 'RefExtinct'
});

exports.Prisma.TypeFlexcibleVehiScalarFieldEnum = makeEnum({
  RefFlexcib: 'RefFlexcib'
});

exports.Prisma.TypeMissionScalarFieldEnum = makeEnum({
  Code: 'Code',
  Designation: 'Designation',
  SmallIcon: 'SmallIcon'
});

exports.Prisma.TypeMoteurScalarFieldEnum = makeEnum({
  CodeTyMot: 'CodeTyMot',
  DesigTyMot: 'DesigTyMot'
});

exports.Prisma.TypePneuScalarFieldEnum = makeEnum({
  DesigTyPneu: 'DesigTyPneu'
});

exports.Prisma.TypePompeScalarFieldEnum = makeEnum({
  RefPompe: 'RefPompe',
  DesigPompe: 'DesigPompe'
});

exports.Prisma.TypePontArriereScalarFieldEnum = makeEnum({
  CodeTyPontArri: 'CodeTyPontArri',
  DesigTyPontArri: 'DesigTyPontArri'
});

exports.Prisma.TypeRemorqueScalarFieldEnum = makeEnum({
  CodeTypeRemorque: 'CodeTypeRemorque',
  DesignationTyRemorque: 'DesignationTyRemorque',
  Immo: 'Immo',
  EtatImmo: 'EtatImmo'
});

exports.Prisma.TypeReparationScalarFieldEnum = makeEnum({
  CodeT: 'CodeT',
  Libelle: 'Libelle'
});

exports.Prisma.TypeSuspontionArriereScalarFieldEnum = makeEnum({
  CodeTySusArr: 'CodeTySusArr',
  DesigTySusArr: 'DesigTySusArr'
});

exports.Prisma.TypeSuspontionAvantScalarFieldEnum = makeEnum({
  CodeTySusAv: 'CodeTySusAv',
  DesigTySusAv: 'DesigTySusAv'
});

exports.Prisma.TypeTachygrapheScalarFieldEnum = makeEnum({
  RefTachygraphe: 'RefTachygraphe'
});

exports.Prisma.TypeVehiculeScalarFieldEnum = makeEnum({
  CodeTyVeh: 'CodeTyVeh',
  IntituleTyVeh: 'IntituleTyVeh',
  Immo: 'Immo',
  EtatImmo: 'EtatImmo'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  ID: 'ID',
  Email: 'Email',
  Password: 'Password',
  FirstName: 'FirstName',
  LastName: 'LastName',
  Role: 'Role',
  Phone: 'Phone',
  Image: 'Image'
});

exports.Prisma.UtilisateursScalarFieldEnum = makeEnum({
  CodeUser: 'CodeUser',
  LoginUser: 'LoginUser',
  MotPassUser: 'MotPassUser',
  NomUser: 'NomUser',
  PrenomUser: 'PrenomUser',
  CodeDroit: 'CodeDroit',
  Connect: 'Connect'
});

exports.Prisma.VehFoncScalarFieldEnum = makeEnum({
  codeVF: 'codeVF',
  codeF: 'codeF',
  codeV: 'codeV',
  DateD: 'DateD',
  DateF: 'DateF'
});

exports.Prisma.Vehi_ExtinScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  RefExtinct: 'RefExtinct',
  NSerieExtinct: 'NSerieExtinct',
  DateExtMontage: 'DateExtMontage',
  DateExtDemontage: 'DateExtDemontage',
  IndexExtMontage: 'IndexExtMontage',
  IndexExtDemontage: 'IndexExtDemontage',
  NumOrdreMontage: 'NumOrdreMontage',
  NumOrdreDemontage: 'NumOrdreDemontage',
  CodeFilialMontage: 'CodeFilialMontage',
  CodeFilialDemontage: 'CodeFilialDemontage'
});

exports.Prisma.VehiculeScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  CodeTyVeh: 'CodeTyVeh',
  CodeMarVeh: 'CodeMarVeh',
  Etat: 'Etat',
  CodeCl: 'CodeCl',
  IndexeVeh: 'IndexeVeh',
  CumuleKms: 'CumuleKms',
  NbrPneux: 'NbrPneux',
  Gaz: 'Gaz',
  Climatiseur: 'Climatiseur',
  MotoPompe: 'MotoPompe',
  NChassis: 'NChassis',
  Ptra: 'Ptra',
  CodeTyMot: 'CodeTyMot',
  CodeTyEmbr: 'CodeTyEmbr',
  CodeTyBteVit: 'CodeTyBteVit',
  CodeTyBtDir: 'CodeTyBtDir',
  CodeTyAvTr: 'CodeTyAvTr',
  CodeTyPontArri: 'CodeTyPontArri',
  CodeTySusAv: 'CodeTySusAv',
  CodeTySusArr: 'CodeTySusArr',
  PoidsVide: 'PoidsVide',
  MoyenneConsommation: 'MoyenneConsommation',
  CodeTypeRemorque: 'CodeTypeRemorque',
  Chargeutile: 'Chargeutile',
  DateMiseEnService: 'DateMiseEnService',
  DateAchat: 'DateAchat',
  CodeParc: 'CodeParc',
  DesigTyPneu: 'DesigTyPneu',
  CodeOeilMot: 'CodeOeilMot',
  QteHuileMot: 'QteHuileMot',
  CodeOeilBteVit: 'CodeOeilBteVit',
  QteHuileBv: 'QteHuileBv',
  CodeOeilEmbr: 'CodeOeilEmbr',
  QteHEmb: 'QteHEmb',
  CodeOeilDirec: 'CodeOeilDirec',
  QteHDirect: 'QteHDirect',
  CodeOeilRefr: 'CodeOeilRefr',
  QteHRefroid: 'QteHRefroid',
  CodeOeilFrein: 'CodeOeilFrein',
  QteHFrein: 'QteHFrein',
  CodeOeilGasoil: 'CodeOeilGasoil',
  QteHReservCarb: 'QteHReservCarb',
  CodeHEssuiGlass: 'CodeHEssuiGlass',
  QteHuilEssuiG: 'QteHuilEssuiG',
  CodeHPontA: 'CodeHPontA',
  QteHPArt: 'QteHPArt',
  CodeHReductRou: 'CodeHReductRou',
  QteHReR: 'QteHReR',
  CodeHPriseMvt: 'CodeHPriseMvt',
  QteHPMvt: 'QteHPMvt',
  CodeHuileGa: 'CodeHuileGa',
  QteHGasoil: 'QteHGasoil',
  Remarques: 'Remarques',
  Observations: 'Observations',
  IndexT: 'IndexT',
  IndexTAvModif: 'IndexTAvModif',
  ParcourDepart: 'ParcourDepart',
  FrmSource: 'FrmSource',
  CodeTyCarbu: 'CodeTyCarbu',
  NumCarte: 'NumCarte',
  NbPlace: 'NbPlace',
  CodeOperationBon: 'CodeOperationBon',
  NbreLittreBonGasoil: 'NbreLittreBonGasoil',
  NbreBonGasoil: 'NbreBonGasoil',
  DateBonGas: 'DateBonGas',
  DateProchBon: 'DateProchBon',
  RTMT: 'RTMT',
  ABS: 'ABS',
  EBS: 'EBS',
  AntiBrouillard: 'AntiBrouillard',
  AffectationClient: 'AffectationClient',
  TRMT: 'TRMT',
  SousClient: 'SousClient',
  ReferenceTachygraphe: 'ReferenceTachygraphe',
  NSerieTachygraphe: 'NSerieTachygraphe',
  PuissanceFiscal: 'PuissanceFiscal',
  ValeurAcquisition: 'ValeurAcquisition',
  ValeurVCN: 'ValeurVCN',
  CodeSituation: 'CodeSituation',
  EtatImmo: 'EtatImmo',
  CodeVehiculeCarburant: 'CodeVehiculeCarburant',
  SousTraitance: 'SousTraitance',
  SousTraitant: 'SousTraitant',
  SuiviKmHeure: 'SuiviKmHeure',
  Abreviation: 'Abreviation',
  PTC: 'PTC',
  PTAC: 'PTAC',
  NumeroPolice: 'NumeroPolice',
  MatParcEtablissement: 'MatParcEtablissement',
  NCarteGris: 'NCarteGris',
  Assurance: 'Assurance',
  NbrPlace: 'NbrPlace'
});

exports.Prisma.Vehicule_ChauffeurScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  MatriculeC: 'MatriculeC',
  DateDebutConduit: 'DateDebutConduit',
  CodeL: 'CodeL',
  DateFinConduit: 'DateFinConduit',
  IndexVehChaufDebut: 'IndexVehChaufDebut',
  IndexVehChaufFin: 'IndexVehChaufFin',
  Source: 'Source',
  Code: 'Code'
});

exports.Prisma.Vehicule_LieuScalarFieldEnum = makeEnum({
  CodeLieu: 'CodeLieu',
  NT: 'NT',
  NP: 'NP',
  PE: 'PE',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  Code: 'Code',
  TypeAffectation: 'TypeAffectation',
  NTelegram: 'NTelegram',
  NRapport: 'NRapport',
  Utilisateur: 'Utilisateur',
  UtilisateurDesaff: 'UtilisateurDesaff'
});

exports.Prisma.Vehicule_RemorqueScalarFieldEnum = makeEnum({
  ImmatriculationVeh: 'ImmatriculationVeh',
  MatriculeRem: 'MatriculeRem',
  DateDebutRemVeh: 'DateDebutRemVeh',
  DateFinRemVeh: 'DateFinRemVeh',
  IndexVehRemDeb: 'IndexVehRemDeb',
  IndexVehRemFin: 'IndexVehRemFin',
  IndexAffect: 'IndexAffect',
  IndexDesaff: 'IndexDesaff',
  Code: 'Code'
});

exports.Prisma.VehRemScalarFieldEnum = makeEnum({
  CodeVehRem: 'CodeVehRem',
  DesigVehRem: 'DesigVehRem'
});

exports.Prisma.VehServScalarFieldEnum = makeEnum({
  codeSV: 'codeSV',
  CodeS: 'CodeS',
  CodeV: 'CodeV',
  DateD: 'DateD',
  DateF: 'DateF'
});

exports.Prisma.VisitePr_ventifRemorqueScalarFieldEnum = makeEnum({
  CodeVisite: 'CodeVisite',
  DesigVisite: 'DesigVisite',
  CodeTypeRemorque: 'CodeTypeRemorque',
  Index_PrevV: 'Index_PrevV',
  EcheanceV: 'EcheanceV',
  index_messageV: 'index_messageV',
  echeance_messageV: 'echeance_messageV'
});

exports.Prisma.VisitesPreventifsScalarFieldEnum = makeEnum({
  CodeVisite: 'CodeVisite',
  DesigVisite: 'DesigVisite',
  CodeTyVehV: 'CodeTyVehV',
  Index_PrevV: 'Index_PrevV',
  EcheanceV: 'EcheanceV',
  index_messageV: 'index_messageV',
  echeance_messageV: 'echeance_messageV'
});

exports.Prisma.VisiteTechnique_ListeVehiculeScalarFieldEnum = makeEnum({
  Vehicule: 'Vehicule',
  NContrat: 'NContrat'
});

exports.Prisma.VisiteTechnique_VehiculeScalarFieldEnum = makeEnum({
  NContrat: 'NContrat',
  DateEffetDebut: 'DateEffetDebut',
  DateEffetFin: 'DateEffetFin',
  R_f_rence: 'R_f_rence',
  Alerte: 'Alerte',
  Glossaire: 'Glossaire',
  Fractionnement: 'Fractionnement',
  Etat: 'Etat',
  Prolongation: 'Prolongation',
  Montant: 'Montant',
  Filiale: 'Filiale',
  Departement: 'Departement'
});

exports.Prisma.VisiteVehiculeRemorqueScalarFieldEnum = makeEnum({
  CodeVisite: 'CodeVisite',
  MatriculeVehRem: 'MatriculeVehRem',
  DateVist: 'DateVist',
  IndexVehRem: 'IndexVehRem'
});

exports.Prisma.SysdiagramsScalarFieldEnum = makeEnum({
  name: 'name',
  principal_id: 'principal_id',
  diagram_id: 'diagram_id',
  version: 'version',
  definition: 'definition'
});

exports.Prisma.AmendeScalarFieldEnum = makeEnum({
  ID: 'ID',
  Chauffeur: 'Chauffeur',
  Vehicule: 'Vehicule',
  Cause: 'Cause',
  Date: 'Date',
  Montant: 'Montant',
  Etat: 'Etat'
});

exports.Prisma.CK_TypeScalarFieldEnum = makeEnum({
  CodeCK_Type: 'CodeCK_Type',
  Designation: 'Designation'
});

exports.Prisma.CK_SousTypeScalarFieldEnum = makeEnum({
  CodeCK_SousType: 'CodeCK_SousType',
  Designation: 'Designation'
});

exports.Prisma.CK_ContenuScalarFieldEnum = makeEnum({
  CodeCK_Contenu: 'CodeCK_Contenu',
  Designation: 'Designation'
});

exports.Prisma.CK_ChecklistScalarFieldEnum = makeEnum({
  CodeCK: 'CodeCK',
  CodeCK_Type: 'CodeCK_Type',
  CodeCK_SousType: 'CodeCK_SousType',
  CodeCK_Contenu: 'CodeCK_Contenu',
  DesignationCK: 'DesignationCK'
});

exports.Prisma.CK_EnteteScalarFieldEnum = makeEnum({
  CodeDoc: 'CodeDoc',
  Filiale: 'Filiale',
  Vehicule: 'Vehicule',
  Chauffeur: 'Chauffeur',
  Remorque: 'Remorque',
  Date: 'Date',
  Heure: 'Heure'
});

exports.Prisma.CK_LigneScalarFieldEnum = makeEnum({
  CodeDoc: 'CodeDoc',
  Filiale: 'Filiale',
  Oui: 'Oui',
  Non: 'Non',
  Observations: 'Observations'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  Accident: 'Accident',
  AffectationClient: 'AffectationClient',
  AffectationType: 'AffectationType',
  Alerte: 'Alerte',
  AlerteRemorque: 'AlerteRemorque',
  Article: 'Article',
  ArticleFournisseur: 'ArticleFournisseur',
  ArticleTypeVehicule: 'ArticleTypeVehicule',
  Assurance: 'Assurance',
  Assurance_Contrat: 'Assurance_Contrat',
  Assurance_Option: 'Assurance_Option',
  Assurance_Vehicule: 'Assurance_Vehicule',
  CategorieArticle: 'CategorieArticle',
  CategorieReparation: 'CategorieReparation',
  CategoriesPermis: 'CategoriesPermis',
  cbSysLibre: 'cbSysLibre',
  Chauffeur: 'Chauffeur',
  Chauffeur_CategPermis: 'Chauffeur_CategPermis',
  Chauffeur_Lieu: 'Chauffeur_Lieu',
  Client: 'Client',
  Convoyeur: 'Convoyeur',
  Convoyeur_CategPermis: 'Convoyeur_CategPermis',
  CoutMainOeuvre: 'CoutMainOeuvre',
  CoutMission: 'CoutMission',
  CoutOperation: 'CoutOperation',
  cRegion: 'cRegion',
  cVilles: 'cVilles',
  Depot: 'Depot',
  DepotRemplissageGasoil: 'DepotRemplissageGasoil',
  Depots_Clients: 'Depots_Clients',
  DetailRemplacement: 'DetailRemplacement',
  DIDemandeIntervention: 'DIDemandeIntervention',
  DIMode: 'DIMode',
  DIPriorite: 'DIPriorite',
  Direction: 'Direction',
  DISource: 'DISource',
  DIStatut: 'DIStatut',
  E_ChauffContraintFormation: 'E_ChauffContraintFormation',
  E_ClientContrainteFormation: 'E_ClientContrainteFormation',
  E_ContrainteFormation: 'E_ContrainteFormation',
  E_ConvContrainteFormation: 'E_ConvContrainteFormation',
  E_MecanicienContraintFormation: 'E_MecanicienContraintFormation',
  E_RemorqueContrainteFormation: 'E_RemorqueContrainteFormation',
  E_VehiculeContraintFormation: 'E_VehiculeContraintFormation',
  EmailCC: 'EmailCC',
  EpaisseurPneu: 'EpaisseurPneu',
  EquivalenceArticle: 'EquivalenceArticle',
  Extincteurs: 'Extincteurs',
  F_COLLABORATEUR: 'F_COLLABORATEUR',
  F_COMPTEA: 'F_COMPTEA',
  F_COMPTEG: 'F_COMPTEG',
  F_COMPTER: 'F_COMPTER',
  F_DEPOT: 'F_DEPOT',
  F_DEPOTEMPL: 'F_DEPOTEMPL',
  F_FAMILLEIMMO: 'F_FAMILLEIMMO',
  F_PROTECTIONCPTA: 'F_PROTECTIONCPTA',
  F_TAXE: 'F_TAXE',
  FA_ArticleFacturation: 'FA_ArticleFacturation',
  FA_ArticleTaxe: 'FA_ArticleTaxe',
  FA_CatCompta: 'FA_CatCompta',
  FA_ChargeContrat: 'FA_ChargeContrat',
  FA_CompteG: 'FA_CompteG',
  FA_EnteteBonCommande: 'FA_EnteteBonCommande',
  FA_EnteteBonLivraison: 'FA_EnteteBonLivraison',
  FA_EnteteDevis: 'FA_EnteteDevis',
  FA_EnteteFacture: 'FA_EnteteFacture',
  FA_FacturationEnergie: 'FA_FacturationEnergie',
  FA_FacturationForfait: 'FA_FacturationForfait',
  FA_FacturationLocation: 'FA_FacturationLocation',
  FA_FacturationPrixLieu: 'FA_FacturationPrixLieu',
  FA_FacturationToneKm: 'FA_FacturationToneKm',
  FA_FacturationType: 'FA_FacturationType',
  FA_FacturationTypeCl: 'FA_FacturationTypeCl',
  FA_FamilleArticle: 'FA_FamilleArticle',
  FA_FamilleTaxe: 'FA_FamilleTaxe',
  FA_Filiale: 'FA_Filiale',
  FA_Formule: 'FA_Formule',
  FA_Journaux: 'FA_Journaux',
  FA_LieuArrive: 'FA_LieuArrive',
  FA_LieuDepart: 'FA_LieuDepart',
  FA_LieuDistance: 'FA_LieuDistance',
  FA_LieuDistanceContrat: 'FA_LieuDistanceContrat',
  FA_LigneBonCommande: 'FA_LigneBonCommande',
  FA_LigneBonLivraison: 'FA_LigneBonLivraison',
  FA_LigneDevis: 'FA_LigneDevis',
  FA_LigneFacture: 'FA_LigneFacture',
  FA_ModeReglement: 'FA_ModeReglement',
  FA_Operationcontrat: 'FA_Operationcontrat',
  FA_Operationcout: 'FA_Operationcout',
  FA_Produits: 'FA_Produits',
  FA_ProvenanceT: 'FA_ProvenanceT',
  FA_SectionAnalytique: 'FA_SectionAnalytique',
  FA_SensT: 'FA_SensT',
  FA_Souche: 'FA_Souche',
  FA_Taxe: 'FA_Taxe',
  FA_TypeBT: 'FA_TypeBT',
  FA_TypeCharge: 'FA_TypeCharge',
  FA_TypeParametre: 'FA_TypeParametre',
  FA_TypeTaxe: 'FA_TypeTaxe',
  FA_Unite: 'FA_Unite',
  FC_Banque: 'FC_Banque',
  FC_CompteBancaire: 'FC_CompteBancaire',
  FC_ModeReglement: 'FC_ModeReglement',
  FC_Reglement: 'FC_Reglement',
  FC_ReglementFacture: 'FC_ReglementFacture',
  Filiale: 'Filiale',
  FilialeBlocageKms: 'FilialeBlocageKms',
  Flexibles: 'Flexibles',
  Fonction: 'Fonction',
  FormeSource: 'FormeSource',
  Fournisseur: 'Fournisseur',
  Gouvernorat: 'Gouvernorat',
  GroupsUtilisateurs: 'GroupsUtilisateurs',
  HistoriqueAnomalieGazoil: 'HistoriqueAnomalieGazoil',
  HistoriqueDemontage: 'HistoriqueDemontage',
  HistoriqueIndexPompe: 'HistoriqueIndexPompe',
  HistoriqueIndexVehicule: 'HistoriqueIndexVehicule',
  HistoriquePneumatique: 'HistoriquePneumatique',
  HistoriquePrix: 'HistoriquePrix',
  HuileEssuiGlass: 'HuileEssuiGlass',
  HuileGasoil: 'HuileGasoil',
  HuilePontArr: 'HuilePontArr',
  HuilePriseMvt: 'HuilePriseMvt',
  HuileReductRou: 'HuileReductRou',
  Image: 'Image',
  ImageAccident: 'ImageAccident',
  ImageAffaire: 'ImageAffaire',
  ImageAffectationVehicule: 'ImageAffectationVehicule',
  ImageAssurance: 'ImageAssurance',
  ImageChauffeur: 'ImageChauffeur',
  ImageConvoyeur: 'ImageConvoyeur',
  ImageDevis: 'ImageDevis',
  ImageMecanicien: 'ImageMecanicien',
  ImageOR: 'ImageOR',
  ImagePersonnel: 'ImagePersonnel',
  ImageTaxe: 'ImageTaxe',
  ImageVehicule: 'ImageVehicule',
  ImageVisiteTechnique: 'ImageVisiteTechnique',
  Jde: 'Jde',
  LieuChargement: 'LieuChargement',
  LieuCouchage: 'LieuCouchage',
  LieuDechargement: 'LieuDechargement',
  LieuRepot: 'LieuRepot',
  LigneOrdreReparation: 'LigneOrdreReparation',
  LigneOrdreSortie: 'LigneOrdreSortie',
  ListeClient: 'ListeClient',
  Location: 'Location',
  LocationArticle: 'LocationArticle',
  MarqueArticle: 'MarqueArticle',
  MarquePneu: 'MarquePneu',
  MarqueVehicule: 'MarqueVehicule',
  Mecanicien: 'Mecanicien',
  Mecanicien_Lieu: 'Mecanicien_Lieu',
  MecanicienTravaux: 'MecanicienTravaux',
  Mission: 'Mission',
  Mission_Personnels: 'Mission_Personnels',
  Missions_Clients: 'Missions_Clients',
  Missions_Convoyeur: 'Missions_Convoyeur',
  Missions_LieuDeChargement: 'Missions_LieuDeChargement',
  OeilBoiteVitesse: 'OeilBoiteVitesse',
  OeilDirection: 'OeilDirection',
  OeilEmbrayage: 'OeilEmbrayage',
  OeilFrein: 'OeilFrein',
  OeilMoteur: 'OeilMoteur',
  OeilReferoidissement: 'OeilReferoidissement',
  OeilReservoireCarburent: 'OeilReservoireCarburent',
  OptionAssurance: 'OptionAssurance',
  OrdreAchatGasoil: 'OrdreAchatGasoil',
  OrdreEntrer: 'OrdreEntrer',
  OrdreGazoil: 'OrdreGazoil',
  OrdreReparation: 'OrdreReparation',
  OrdreSortie: 'OrdreSortie',
  OrdreTransfertCarburant: 'OrdreTransfertCarburant',
  Organe: 'Organe',
  P_CATEGORIETP: 'P_CATEGORIETP',
  P_CONVEUROIMMO: 'P_CONVEUROIMMO',
  P_DOSSIER: 'P_DOSSIER',
  P_DOSSIERCIAL: 'P_DOSSIERCIAL',
  P_NATUREBIEN: 'P_NATUREBIEN',
  P_PREFERENCESIMMO: 'P_PREFERENCESIMMO',
  P_TIERS: 'P_TIERS',
  Param_Pneu: 'Param_Pneu',
  ParamDistanceConv: 'ParamDistanceConv',
  Parametrage: 'Parametrage',
  Park: 'Park',
  Pays: 'Pays',
  Personnel: 'Personnel',
  Plan_Action: 'Plan_Action',
  Pneumatique: 'Pneumatique',
  Pompes: 'Pompes',
  Pompiste: 'Pompiste',
  Pompiste_CategPermis: 'Pompiste_CategPermis',
  PressionPneu: 'PressionPneu',
  RapportAccident: 'RapportAccident',
  Region: 'Region',
  Region1: 'Region1',
  Remorque: 'Remorque',
  Remorque_Extincteur: 'Remorque_Extincteur',
  Remorque_Flexibles: 'Remorque_Flexibles',
  RemplacerArticle: 'RemplacerArticle',
  SerialiseArticleTemp: 'SerialiseArticleTemp',
  SerialiserArticle: 'SerialiserArticle',
  SerieArticleConsommer: 'SerieArticleConsommer',
  Service: 'Service',
  Situation: 'Situation',
  SousTraitance: 'SousTraitance',
  StatutMission: 'StatutMission',
  StatutOR: 'StatutOR',
  StockArticle: 'StockArticle',
  StockTemp: 'StockTemp',
  StockTempTCarb: 'StockTempTCarb',
  StructurePneumatique: 'StructurePneumatique',
  Tachygraphe: 'Tachygraphe',
  TachygrapheVehiculRepar: 'TachygrapheVehiculRepar',
  TaxeVignette_ListeVehicule: 'TaxeVignette_ListeVehicule',
  TaxeVignette_Vehicule: 'TaxeVignette_Vehicule',
  TCarteCarburant: 'TCarteCarburant',
  TOperateurCarte: 'TOperateurCarte',
  Transfert: 'Transfert',
  Traveaux: 'Traveaux',
  TrouPneu: 'TrouPneu',
  TypeAccident: 'TypeAccident',
  TypeAvantTrain: 'TypeAvantTrain',
  TypeBoiteDirection: 'TypeBoiteDirection',
  TypeBoiteVitesse: 'TypeBoiteVitesse',
  TypeCarburent: 'TypeCarburent',
  TypeCarteCarburant: 'TypeCarteCarburant',
  TypeDocAdmin: 'TypeDocAdmin',
  TypeEmbrayage: 'TypeEmbrayage',
  TypeEssieu: 'TypeEssieu',
  TypeExtincteursVeh: 'TypeExtincteursVeh',
  TypeFlexcibleVehi: 'TypeFlexcibleVehi',
  TypeMission: 'TypeMission',
  TypeMoteur: 'TypeMoteur',
  TypePneu: 'TypePneu',
  TypePompe: 'TypePompe',
  TypePontArriere: 'TypePontArriere',
  TypeRemorque: 'TypeRemorque',
  TypeReparation: 'TypeReparation',
  TypeSuspontionArriere: 'TypeSuspontionArriere',
  TypeSuspontionAvant: 'TypeSuspontionAvant',
  TypeTachygraphe: 'TypeTachygraphe',
  TypeVehicule: 'TypeVehicule',
  User: 'User',
  Utilisateurs: 'Utilisateurs',
  VehFonc: 'VehFonc',
  Vehi_Extin: 'Vehi_Extin',
  Vehicule: 'Vehicule',
  Vehicule_Chauffeur: 'Vehicule_Chauffeur',
  Vehicule_Lieu: 'Vehicule_Lieu',
  Vehicule_Remorque: 'Vehicule_Remorque',
  VehRem: 'VehRem',
  VehServ: 'VehServ',
  VisitePr_ventifRemorque: 'VisitePr_ventifRemorque',
  VisitesPreventifs: 'VisitesPreventifs',
  VisiteTechnique_ListeVehicule: 'VisiteTechnique_ListeVehicule',
  VisiteTechnique_Vehicule: 'VisiteTechnique_Vehicule',
  VisiteVehiculeRemorque: 'VisiteVehiculeRemorque',
  sysdiagrams: 'sysdiagrams',
  Amende: 'Amende',
  CK_Type: 'CK_Type',
  CK_SousType: 'CK_SousType',
  CK_Contenu: 'CK_Contenu',
  CK_Checklist: 'CK_Checklist',
  CK_Entete: 'CK_Entete',
  CK_Ligne: 'CK_Ligne'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
